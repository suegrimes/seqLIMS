var search_data = {"index":{"searchIndex":["ability","activerecordextension","classmethods","alignqc","alignqcscontroller","alignmentref","alignmentrefscontroller","annotatemodels","applicationcontroller","applicationhelper","assignedbarcode","assignedbarcodescontroller","attachedfile","attachedfilescontroller","attachmentuploader","authenticatedgenerator","authenticatedmailergenerator","authenticatedsystem","authenticatedtesthelper","autocomplete","classmethods","autocompleteformbuilderhelper","autocompleteformbuilderhelpertest","autocompletemacroshelper","autocompletenestedattributestest","autocompletetest","baseloginproxy","blame","userstamp","userstampmigrationhelper","blametest","builderhelper","categoriescontroller","categorieshelper","category","categoryvalue","cgroup","consentprotocol","consentprotocolscontroller","createparents","custommessages","dissectedsamplescontroller","flowcell","flowcellscontroller","flowlane","flowcellqueriescontroller","flowcellquery","freezerlocation","freezerlocationscontroller","hasmanyautocompleteviewtest","histologiescontroller","histologieshelper","histology","httploginproxy","indextag","indextagscontroller","inventorydb","item","itemquery","itemscontroller","libbarcode","libsample","limscommon","limsmailer","machineincident","molassayqueriescontroller","molassayquery","molecularassay","molecularassayscontroller","molecularassayshelper","monkey","mplexlibscontroller","notable","novalidation","object","oligopoolscontroller","order","ordermailer","orderscontroller","overrideblametest","sprocket","parent","partialblametest","pathologiescontroller","pathology","patient","patientscontroller","person","pool","primer","processedsample","processedsamplescontroller","protocol","protocolscontroller","psamplequeriescontroller","psamplequery","publication","publicationscontroller","rails","generator","namedbase","researcher","researcherscontroller","role","rolerequirementsystem","rolesecurityclassmethods","rolesecurityinstancemethods","rolerequirementtesthelper","rundir","rundirscontroller","sample","samplecharacteristic","samplecharacteristicscontroller","samplequeriescontroller","samplequerieshelper","samplequery","samplestoragecontainer","samplestoragecontainerscontroller","samplescontroller","seqlib","seqlibscontroller","seqlibshelper","seqmachine","seqmachinescontroller","seqliblanescontroller","seqlibqueriescontroller","seqlibquery","spec","rails","matchers","validatetimeliness","sprocket","sslrequirement","classmethods","sslrequirementcontroller","sslrequirementtest","storagedevice","storagedevicescontroller","taggedbuilder","test","unit","testcase","testiescontroller","timetravel","timeextensions","classmethods","uploadscontroller","user","userlog","userlogin","usernotifier","userobserver","userscontroller","validatestimeliness","actionview","instancetag","activerecord","attributemethods","classmethods","multiparameterattributes","formats","parser","validationmethods","classmethods","validator","viewmapper","hasmanyautocompleteview","welcomecontroller","widget","withvalidation","xmlloginproxy","a()","abbr_month_names()","accept()","access_denied()","access_denied()","activation()","add_auto_complete_manifest()","add_auto_complete_route()","add_entry()","add_entry()","add_formats()","add_new_sample()","add_qc_for_flow_cell()","add_to_select()","add_to_select()","add_to_select()","add_to_values()","add_to_values()","add_to_values()","add_user()","add_value_link()","after_save()","alt_run_or_descr()","annotate()","annotate_one_file()","array_to_string()","assert_difference()","assert_http_authentication_required()","assert_no_difference()","assert_requires_login()","assert_user_can_access()","assert_user_cannot_access()","assert_user_cant_access()","assert_users_access()","assigned_contigs()","at_time()","attribute_for_type()","attrs_for_sequencing()","authenticate()","authenticate()","authenticate()","authenticate()","authenticated?()","authenticated?()","authorize_as()","authorized?()","auto_complete_attributes()","auto_complete_attributes_for_model()","auto_complete_attributes_from_command_line()","auto_complete_field()","auto_complete_field_with_style_and_script()","auto_complete_for()","auto_complete_for_barcode_key()","auto_complete_for_barcode_key()","auto_complete_for_barcode_key()","auto_complete_for_barcode_key()","auto_complete_for_method()","auto_complete_result()","autocomplete_flow_cells_sequencing_key()","autocomplete_item_catalog_nr()","autocomplete_item_company_name()","autocomplete_item_item_description()","autocomplete_molecular_assay_source_sample_name()","autocomplete_processed_sample_barcode_search()","b()","banner()","barcode_incl_nccc()","barcode_num()","barcode_search()","barcode_sort()","barcode_type()","basename_with_ext()","before_create()","before_create()","before_save()","break_clear()","buffer_vol()","build_assay()","build_flow_lanes()","build_params_from_obj()","build_simplex_lib()","c()","calc_pct_align()","call()","category_filter()","check()","check()","check_barcodes()","check_concentration()","check_for_existing_mrn()","check_range()","check_roles()","class_name()","clinical_sample()","column()","columns()","compile_format_expressions()","configure_validator()","consent_descr()","container_and_position()","container_and_position()","container_and_position()","container_desc()","container_type()","content_type()","control_lane?()","control_lane_nr()","count_overlapping_range()","count_samples_in_range()","create()","create()","create()","create()","create()","create()","create()","create()","create()","create()","create()","create()","create()","create()","create()","create()","create()","create()","create()","create()","create()","create()","create()","create()","create()","create()","create()","create_assays()","create_reset_code()","created_tagged_field()","current_()","current_user()","current_user=()","d()","datetime_selector_with_timeliness()","default_id()","define_attribute_methods_with_timeliness()","define_conditions()","define_conditions()","define_conditions()","define_conditions()","define_conditions()","define_conditions()","define_conditions()","define_lib_conditions()","define_lib_conditions()","del_run_dir()","delete_format()","delete_reset_code()","derive_barcode()","derive_barcode()","derive_field_vals()","description()","destroy()","destroy()","destroy()","destroy()","destroy()","destroy()","destroy()","destroy()","destroy()","destroy()","destroy()","destroy()","destroy()","destroy()","destroy()","destroy()","destroy()","destroy()","destroy()","destroy()","destroy()","destroy()","destroy()","destroy()","destroy()","destroy()","destroy()","display_msg()","do_annotations()","doc_fullpath()","down()","dropdowns()","dropdowns()","dropdowns()","dropdowns()","dropdowns()","dropdowns()","dropdowns()","dropdowns()","dropdowns()","dropdowns()","dropdowns()","dropdowns()","dropdowns()","dropdowns()","dropdowns()","dropdowns()","dropdowns()","dropdowns()","dropdowns()","dropdowns()","dropdowns()","dropdowns()","dummy_barcode()","edit()","edit()","edit()","edit()","edit()","edit()","edit()","edit()","edit()","edit()","edit()","edit()","edit()","edit()","edit()","edit()","edit()","edit()","edit()","edit()","edit()","edit()","edit()","edit()","edit()","edit()","edit()","edit()","edit_by_barcode()","edit_by_barcode()","edit_by_barcode()","edit_order_items()","edit_params()","edit_params()","edit_params()","email_list()","email_list()","email_value()","email_value()","enable_active_record_datetime_parser!()","enable_datetime_select_extension!()","enable_datetime_select_invalid_value_extension!()","enable_multiparameter_attributes_extension!()","encode()","encrypt()","encrypt()","encrypt()","encrypt()","encrypt_password()","encrypt_password()","enter_or_upd_by()","error_messages()","error_messages()","evaluate_option_value()","exclude_adapters()","execute_callstack_for_multiparameter_attributes_with_timeliness()","existing_item_attributes=()","existing_lane_attributes=()","expect_no_actions()","expect_no_warnings()","export_libqc()","export_libqc_csv()","export_libqc_setup()","export_samples()","export_samples()","export_samples_csv()","export_samples_csv()","export_samples_setup()","export_samples_setup()","extended()","extension_white_list()","extr_type_char()","extract_date_from_multiparameter_attributes()","extract_time_from_multiparameter_attributes()","failure_message()","final_amt_ug()","find_all_by_date()","find_all_incl_sample()","find_all_source_for_dissected()","find_all_unique()","find_all_unordered()","find_all_with_authorization()","find_all_with_incidents()","find_and_group_by_active_inactive()","find_and_group_by_source()","find_and_group_for_clinical()","find_and_group_for_patient()","find_and_group_for_sample()","find_and_group_with_conditions()","find_and_incr_run_nr()","find_and_sort_all()","find_and_sort_all()","find_and_sortby_cgroup()","find_auto_complete_attributes()","find_barcode()","find_flow_cell_using_params()","find_flowcell_incl_rundirs()","find_flowcells_for_sequencing()","find_for_export()","find_for_export()","find_for_export()","find_for_protocol_type()","find_for_query()","find_for_query()","find_for_query()","find_id_from_mrn()","find_id_using_mrn()","find_newly_added_sample()","find_one_incl_patient()","find_or_blank()","find_patient_nr()","find_sample()","find_sequencing_runs()","find_with_conditions()","find_with_incidents()","find_with_samples()","flowcell_qc()","for_publication?()","for_publication?()","forget_me()","forget_me()","forgot()","format_conc()","format_date()","format_datetime()","format_patient_nr()","format_seq_key()","formats()","free_contigs()","from_nccc?()","full_hour()","generate_proc()","generate_regexp()","generate_regexp_str()","generator_cmd_line()","generator_script_cmd_line()","get_align_key()","get_auth_data()","get_model_names()","get_obj_with_id()","get_obj_with_key()","get_params()","get_params()","get_patient_id()","get_pool_label()","get_pool_name()","get_schema_info()","getwith_attach()","getwith_attach()","getwith_attach()","getwith_attach()","getwith_attach()","getwith_attach()","getwith_attach()","has_role?()","have_comments?()","help()","hipaa_data()","hipaa_data=()","hiseq_qc?()","hiseq_run?()","human_attribute_name()","id_name()","in_multiplex_lib?()","included()","included()","included()","included()","included()","included()","included()","included()","included()","included()","included()","includes_chemical?()","index()","index()","index()","index()","index()","index()","index()","index()","index()","index()","index()","index()","index()","index()","index()","index()","index()","index()","index()","index()","index()","index()","index()","index()","index()","index()","index()","index()","index()","index()","index()","index()","initial_amt_ug()","is_auto_complete_attribute?()","is_auto_complete_attribute?()","is_used_as_nested_attribute?()","item_ext_price()","lib_barcode()","link_to_add_fields()","link_to_remove_fields()","list_added()","list_all_by_room()","list_companies_from_items()","list_samples_for_characteristic()","list_samples_for_patient()","list_selected()","list_selected()","list_unordered_items()","load_error_messages()","loadrecs()","loadtodb()","loadtodb()","log_entry()","log_user_action()","logged_in?()","login_as()","login_from_cookie()","login_required()","logout()","machine_name_and_type()","make_time()","manifest()","manifest()","manifest()","matches?()","microseconds()","model_xref()","model_xref()","molecule_type()","month_index()","month_names()","mplex_adapters()","mrn()","mrn=()","multiplex_lib?()","name()","name_of_klass()","name_ver()","name_ver()","negative_failure_message()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new_generator_for_test_model()","new_he_barcode()","new_item_attributes=()","new_items()","new_params()","new_params()","new_params()","new_params()","new_query()","new_query()","new_query()","new_query()","new_query()","new_query()","new_query()","new_query()","new_sample()","new_sample()","next_assay_barcode()","next_dissection_barcode()","next_extraction_barcode()","non_blank_lane_nrs()","non_blank_lanes()","now=()","obj()","offset_in_seconds()","on_flow_lane?()","ordered?()","owner_abbrev()","owner_abbrev()","param_blank?()","params()","parse()","parse()","parse()","password_required?()","password_required?()","pct_with_parens()","person()","pool_string()","pool_string_dtl()","populate_assays()","populate_dropdown()","populate_dropdown()","populate_dropdown()","populate_dropdown()","populate_dropdown()","populate_dropdown()","populate_dropdown()","populate_dropdown_for_category()","populate_dropdown_for_id()","populate_dropdown_grouped()","populate_dropdowns()","populate_items()","populate_lanes()","populate_libs()","position_sort()","prepare_for_render_new()","prepare_for_render_new()","prepare_for_render_new()","protocol_name()","publication_ids()","publication_ids()","query_params()","query_params()","quote()","range_start_chk()","read_attribute_before_type_cast_with_timeliness()","read_fixture()","received?()","recently_reset?()","redirect_back_or_default()","reload_defaults()","reload_defaults()","reload_lib_defaults()","remember_me()","remember_me()","remember_me_for()","remember_me_until()","remember_token?()","remember_token?()","remove_formats()","remove_link_unless_new_record()","remove_this_line()","remove_us_formats()","requester_abbrev()","require_role()","reset()","reset!()","reset_notification()","reset_role_requirements!()","role_symbols()","room_and_freezer()","room_and_freezer()","room_and_freezer()","room_and_freezer()","row_underline()","sample_amt()","sample_category()","sample_conc_ngul()","sample_conc_nm()","sample_conc_with_uom()","sample_dropdowns()","sample_vol()","sanitized_object_name()","save()","save_items()","save_lanes()","seq_dropdowns()","seq_run_key()","sequenced?()","set_chemical_flag()","set_current_user()","set_default_values()","set_error_message()","set_flash()","set_flowcell_status()","setup()","setup()","setup()","setup()","setup()","setup()","setup()","setup()","setup_dropdowns()","setup_dropdowns()","setup_for_rails()","setup_params()","setup_params()","setup_parent_test_model()","setup_sql_params()","setup_sql_params()","setup_sql_params()","setup_test_model()","setup_test_model_without_nested_attributes()","setup_test_table()","should_have_error()","should_have_no_error()","show()","show()","show()","show()","show()","show()","show()","show()","show()","show()","show()","show()","show()","show()","show()","show()","show()","show()","show()","show()","show()","show()","show()","show()","show()","show()","show()","show_by_sample()","show_files()","show_publications()","show_qc()","signup()","signup_notification()","singleplex_lib()","singleplex_lib=()","some_other_models_attributes=()","source_rec()","source_root()","source_roots_for_view()","source_sample_name()","source_sample_name()","source_sample_name=()","source_sample_name=()","splex_adapters()","sql_condition()","sql_conditions_for_date_range()","sql_conditions_for_range()","sql_value()","sql_where()","sql_where()","ssl_allowed()","ssl_allowed?()","ssl_required()","ssl_required?()","store_dir()","store_location()","stub_actions()","stub_warnings()","table_name()","table_name()","table_name()","table_name()","table_name()","tag_ctr()","tag_sequence()","tagged_form_for()","test_ajax_param()","test_ajax_param()","test_ajax_url()","test_ajax_url()","test_allowed_with_ssl()","test_allowed_without_ssl()","test_auto_complete_field()","test_auto_complete_field_in_normal_form_does_not_have_random_id()","test_auto_complete_for_with_block()","test_auto_complete_result()","test_auto_index_value_for_existing_record()","test_auto_index_value_for_new_record()","test_child_index_completion_option()","test_child_index_completion_option()","test_child_index_completion_option_overrides_fields_for_option()","test_child_index_completion_option_overrides_fields_for_option()","test_child_index_fields_for_option()","test_child_index_fields_for_option()","test_compare_macro_to_fields_for_in_nested_form()","test_compare_to_macro_in_normal_form()","test_compare_to_macro_in_normal_form_with_symbol()","test_create()","test_create()","test_create()","test_default_auto_complete_for()","test_disallowed_with_ssl()","test_disallowed_without_ssl()","test_is_used_as_nested_attribute()","test_nested_attributes_all_have_different_ids()","test_not_redirecting_to_http_does_not_preserve_the_flash()","test_not_redirecting_to_https_does_not_preserve_the_flash()","test_object_value()","test_object_value()","test_partial_updates_disabled()","test_partial_updates_enabled()","test_redirect_to_http_preserves_flash()","test_redirect_to_https_preserves_flash()","test_required_with_ssl()","test_required_without_ssl()","test_sanitized_object_name()","test_should_create_()","test_text_field_with_auto_complete()","test_two_auto_complete_fields_in_nested_form_have_different_ids()","test_update()","test_update()","test_update()","testies_attributes=()","testing()","testing()","text_field_with_auto_complete()","text_field_with_auto_complete()","time_array_to_string()","time_array_to_string()","tnm()","to_param()","unambiguous_year()","unique_projects()","up()","upd_dissections()","upd_for_sequencing()","upd_from_source_sample()","upd_items_recvd()","upd_items_recvd_for_order()","upd_lib_lanes()","upd_lib_status()","upd_mplex_fields()","upd_mplex_sample_fields()","upd_mplex_splex()","upd_multi_lanes()","upd_multi_lib_samples()","upd_orderid()","upd_parent_ids()","upd_seq_key()","update()","update()","update()","update()","update()","update()","update()","update()","update()","update()","update()","update()","update()","update()","update()","update()","update()","update()","update()","update()","update()","update()","update()","update()","update()","update()","update()","update()","update_document_attributes()","update_fields()","update_fields()","update_multi_flagged()","url_for()","url_for()","url_for()","url_options_authenticate?()","user_authorized_for?()","user_has_access?()","user_login()","user_role_is?()","userstamp_object()","userstamps()","validate()","validate()","validate()","validate()","validate()","validate()","validate()","validate()","validate_date()","validate_datetime()","validate_lane_nrs()","validate_time()","validate_with()","validates_date()","validates_datetime()","validates_time()","value_with_timeliness()","vol_from_source()","write_date_time_attribute()","readme_for_app"],"longSearchIndex":["ability","activerecordextension","activerecordextension::classmethods","alignqc","alignqcscontroller","alignmentref","alignmentrefscontroller","annotatemodels","applicationcontroller","applicationhelper","assignedbarcode","assignedbarcodescontroller","attachedfile","attachedfilescontroller","attachmentuploader","authenticatedgenerator","authenticatedmailergenerator","authenticatedsystem","authenticatedtesthelper","autocomplete","autocomplete::classmethods","autocompleteformbuilderhelper","autocompleteformbuilderhelpertest","autocompletemacroshelper","autocompletenestedattributestest","autocompletetest","baseloginproxy","blame","blame::userstamp","blame::userstampmigrationhelper","blametest","builderhelper","categoriescontroller","categorieshelper","category","categoryvalue","cgroup","consentprotocol","consentprotocolscontroller","createparents","custommessages","dissectedsamplescontroller","flowcell","flowcellscontroller","flowlane","flowcellqueriescontroller","flowcellquery","freezerlocation","freezerlocationscontroller","hasmanyautocompleteviewtest","histologiescontroller","histologieshelper","histology","httploginproxy","indextag","indextagscontroller","inventorydb","item","itemquery","itemscontroller","libbarcode","libsample","limscommon","limsmailer","machineincident","molassayqueriescontroller","molassayquery","molecularassay","molecularassayscontroller","molecularassayshelper","monkey","mplexlibscontroller","notable","novalidation","object","oligopoolscontroller","order","ordermailer","orderscontroller","overrideblametest","overrideblametest::sprocket","parent","partialblametest","pathologiescontroller","pathology","patient","patientscontroller","person","pool","primer","processedsample","processedsamplescontroller","protocol","protocolscontroller","psamplequeriescontroller","psamplequery","publication","publicationscontroller","rails","rails::generator","rails::generator::namedbase","researcher","researcherscontroller","role","rolerequirementsystem","rolerequirementsystem::rolesecurityclassmethods","rolerequirementsystem::rolesecurityinstancemethods","rolerequirementtesthelper","rundir","rundirscontroller","sample","samplecharacteristic","samplecharacteristicscontroller","samplequeriescontroller","samplequerieshelper","samplequery","samplestoragecontainer","samplestoragecontainerscontroller","samplescontroller","seqlib","seqlibscontroller","seqlibshelper","seqmachine","seqmachinescontroller","seqliblanescontroller","seqlibqueriescontroller","seqlibquery","spec","spec::rails","spec::rails::matchers","spec::rails::matchers::validatetimeliness","sprocket","sslrequirement","sslrequirement::classmethods","sslrequirementcontroller","sslrequirementtest","storagedevice","storagedevicescontroller","taggedbuilder","test","test::unit","test::unit::testcase","testiescontroller","timetravel","timetravel::timeextensions","timetravel::timeextensions::classmethods","uploadscontroller","user","userlog","userlogin","usernotifier","userobserver","userscontroller","validatestimeliness","validatestimeliness::actionview","validatestimeliness::actionview::instancetag","validatestimeliness::activerecord","validatestimeliness::activerecord::attributemethods","validatestimeliness::activerecord::attributemethods::classmethods","validatestimeliness::activerecord::multiparameterattributes","validatestimeliness::formats","validatestimeliness::parser","validatestimeliness::validationmethods","validatestimeliness::validationmethods::classmethods","validatestimeliness::validator","viewmapper","viewmapper::hasmanyautocompleteview","welcomecontroller","widget","withvalidation","xmlloginproxy","sslrequirementcontroller#a()","validatestimeliness::formats::abbr_month_names()","authenticatedtesthelper#accept()","authenticatedsystem#access_denied()","rolerequirementsystem::rolesecurityinstancemethods#access_denied()","usernotifier#activation()","viewmapper::hasmanyautocompleteview#add_auto_complete_manifest()","viewmapper::hasmanyautocompleteview#add_auto_complete_route()","userlog::add_entry()","userlogin::add_entry()","validatestimeliness::formats::add_formats()","samplecharacteristicscontroller#add_new_sample()","alignqc::add_qc_for_flow_cell()","psamplequeriescontroller#add_to_select()","samplequeriescontroller#add_to_select()","seqlibqueriescontroller#add_to_select()","psamplequeriescontroller#add_to_values()","samplequeriescontroller#add_to_values()","seqlibqueriescontroller#add_to_values()","welcomecontroller#add_user()","categorieshelper#add_value_link()","userobserver#after_save()","flowcell#alt_run_or_descr()","annotatemodels::annotate()","annotatemodels::annotate_one_file()","applicationcontroller#array_to_string()","authenticatedtesthelper#assert_difference()","authenticatedtesthelper#assert_http_authentication_required()","authenticatedtesthelper#assert_no_difference()","authenticatedtesthelper#assert_requires_login()","rolerequirementtesthelper#assert_user_can_access()","rolerequirementtesthelper#assert_user_cannot_access()","rolerequirementtesthelper#assert_user_cant_access()","rolerequirementtesthelper#assert_users_access()","assignedbarcodescontroller#assigned_contigs()","object#at_time()","object#attribute_for_type()","flowcellscontroller#attrs_for_sequencing()","httploginproxy#authenticate()","object::authenticate()","user::authenticate()","xmlloginproxy#authenticate()","object#authenticated?()","user#authenticated?()","authenticatedtesthelper#authorize_as()","authenticatedsystem#authorized?()","viewmapper::hasmanyautocompleteview#auto_complete_attributes()","viewmapper::hasmanyautocompleteview#auto_complete_attributes_for_model()","viewmapper::hasmanyautocompleteview#auto_complete_attributes_from_command_line()","autocompletemacroshelper#auto_complete_field()","autocompletemacroshelper#auto_complete_field_with_style_and_script()","autocomplete::classmethods#auto_complete_for()","histologiescontroller#auto_complete_for_barcode_key()","molecularassayscontroller#auto_complete_for_barcode_key()","samplescontroller#auto_complete_for_barcode_key()","seqlibscontroller#auto_complete_for_barcode_key()","viewmapper::hasmanyautocompleteview#auto_complete_for_method()","autocompletemacroshelper#auto_complete_result()","flowcellscontroller#autocomplete_flow_cells_sequencing_key()","itemscontroller#autocomplete_item_catalog_nr()","itemscontroller#autocomplete_item_company_name()","itemscontroller#autocomplete_item_item_description()","molecularassayscontroller#autocomplete_molecular_assay_source_sample_name()","processedsamplescontroller#autocomplete_processed_sample_barcode_search()","sslrequirementcontroller#b()","authenticatedgenerator#banner()","sample#barcode_incl_nccc()","sample#barcode_num()","processedsample::barcode_search()","sample#barcode_sort()","applicationcontroller#barcode_type()","attachedfile#basename_with_ext()","samplecharacteristic#before_create()","samplestoragecontainer#before_create()","samplecharacteristic#before_save()","applicationhelper#break_clear()","molecularassayshelper#buffer_vol()","molecularassayscontroller#build_assay()","flowcell#build_flow_lanes()","limscommon#build_params_from_obj()","seqlibscontroller#build_simplex_lib()","sslrequirementcontroller#c()","alignqc#calc_pct_align()","validatestimeliness::validator#call()","applicationcontroller#category_filter()","httploginproxy#check()","xmlloginproxy#check()","assignedbarcodescontroller#check_barcodes()","molecularassay#check_concentration()","patientscontroller#check_for_existing_mrn()","assignedbarcode#check_range()","rolerequirementsystem::rolesecurityinstancemethods#check_roles()","autocompleteformbuilderhelper#class_name()","sample#clinical_sample()","notable::column()","notable::columns()","validatestimeliness::formats::compile_format_expressions()","object#configure_validator()","samplecharacteristic#consent_descr()","processedsample#container_and_position()","sample#container_and_position()","samplestoragecontainer#container_and_position()","samplestoragecontainer#container_desc()","sample#container_type()","authenticatedtesthelper#content_type()","seqlib#control_lane?()","seqlib#control_lane_nr()","assignedbarcode::count_overlapping_range()","sample::count_samples_in_range()","alignqcscontroller#create()","alignmentrefscontroller#create()","assignedbarcodescontroller#create()","attachedfilescontroller#create()","categoriescontroller#create()","consentprotocolscontroller#create()","dissectedsamplescontroller#create()","flowcellscontroller#create()","freezerlocationscontroller#create()","histologiescontroller#create()","itemscontroller#create()","mplexlibscontroller#create()","object#create()","orderscontroller#create()","pathologiescontroller#create()","processedsamplescontroller#create()","protocolscontroller#create()","publicationscontroller#create()","researcherscontroller#create()","rundirscontroller#create()","samplecharacteristicscontroller#create()","seqlibscontroller#create()","seqmachinescontroller#create()","storagedevicescontroller#create()","testiescontroller#create()","uploadscontroller#create()","userscontroller#create()","molecularassayscontroller#create_assays()","user#create_reset_code()","taggedbuilder::created_tagged_field()","authenticatedsystem#current_()","authenticatedsystem#current_user()","authenticatedsystem#current_user=()","sslrequirementcontroller#d()","validatestimeliness::actionview::instancetag#datetime_selector_with_timeliness()","alignmentref::default_id()","validatestimeliness::activerecord::attributemethods::classmethods#define_attribute_methods_with_timeliness()","flowcellqueriescontroller#define_conditions()","itemscontroller#define_conditions()","molassayqueriescontroller#define_conditions()","orderscontroller#define_conditions()","psamplequeriescontroller#define_conditions()","samplequeriescontroller#define_conditions()","seqlibqueriescontroller#define_conditions()","flowcellscontroller#define_lib_conditions()","mplexlibscontroller#define_lib_conditions()","rundirscontroller#del_run_dir()","object#delete_format()","user#delete_reset_code()","molecularassay#derive_barcode()","processedsample#derive_barcode()","rundir#derive_field_vals()","spec::rails::matchers::validatetimeliness#description()","alignmentrefscontroller#destroy()","assignedbarcodescontroller#destroy()","attachedfilescontroller#destroy()","categoriescontroller#destroy()","consentprotocolscontroller#destroy()","flowcellscontroller#destroy()","freezerlocationscontroller#destroy()","histologiescontroller#destroy()","itemscontroller#destroy()","molecularassayscontroller#destroy()","mplexlibscontroller#destroy()","orderscontroller#destroy()","pathologiescontroller#destroy()","patientscontroller#destroy()","processedsamplescontroller#destroy()","protocolscontroller#destroy()","publicationscontroller#destroy()","researcherscontroller#destroy()","rundirscontroller#destroy()","samplecharacteristicscontroller#destroy()","samplescontroller#destroy()","seqlibscontroller#destroy()","seqmachinescontroller#destroy()","storagedevicescontroller#destroy()","testiescontroller#destroy()","uploadscontroller#destroy()","userscontroller#destroy()","uploadscontroller#display_msg()","annotatemodels::do_annotations()","attachedfile#doc_fullpath()","createparents::down()","alignqcscontroller#dropdowns()","dissectedsamplescontroller#dropdowns()","flowcellscontroller#dropdowns()","flowcellqueriescontroller#dropdowns()","histologiescontroller#dropdowns()","itemscontroller#dropdowns()","molassayqueriescontroller#dropdowns()","molecularassayscontroller#dropdowns()","mplexlibscontroller#dropdowns()","pathologiescontroller#dropdowns()","patientscontroller#dropdowns()","processedsamplescontroller#dropdowns()","psamplequeriescontroller#dropdowns()","publicationscontroller#dropdowns()","researcherscontroller#dropdowns()","rundirscontroller#dropdowns()","samplecharacteristicscontroller#dropdowns()","samplequeriescontroller#dropdowns()","samplestoragecontainerscontroller#dropdowns()","samplescontroller#dropdowns()","seqlibscontroller#dropdowns()","seqlibqueriescontroller#dropdowns()","seqlib#dummy_barcode()","alignqcscontroller#edit()","alignmentrefscontroller#edit()","assignedbarcodescontroller#edit()","categoriescontroller#edit()","consentprotocolscontroller#edit()","dissectedsamplescontroller#edit()","flowcellscontroller#edit()","freezerlocationscontroller#edit()","histologiescontroller#edit()","itemscontroller#edit()","molecularassayscontroller#edit()","mplexlibscontroller#edit()","object#edit()","orderscontroller#edit()","pathologiescontroller#edit()","patientscontroller#edit()","processedsamplescontroller#edit()","protocolscontroller#edit()","publicationscontroller#edit()","researcherscontroller#edit()","rundirscontroller#edit()","samplecharacteristicscontroller#edit()","samplescontroller#edit()","seqlibscontroller#edit()","seqmachinescontroller#edit()","storagedevicescontroller#edit()","testiescontroller#edit()","userscontroller#edit()","histologiescontroller#edit_by_barcode()","processedsamplescontroller#edit_by_barcode()","samplescontroller#edit_by_barcode()","orderscontroller#edit_order_items()","patientscontroller#edit_params()","samplecharacteristicscontroller#edit_params()","samplescontroller#edit_params()","limsmailer#email_list()","ordermailer#email_list()","applicationcontroller#email_value()","ordermailer#email_value()","validatestimeliness::enable_active_record_datetime_parser!()","validatestimeliness::enable_datetime_select_extension!()","validatestimeliness::enable_datetime_select_invalid_value_extension!()","validatestimeliness::enable_multiparameter_attributes_extension!()","object#encode()","object#encrypt()","object::encrypt()","user#encrypt()","user::encrypt()","object#encrypt_password()","user#encrypt_password()","order#enter_or_upd_by()","object#error_messages()","validatestimeliness::validator#error_messages()","object#evaluate_option_value()","seqlibshelper#exclude_adapters()","validatestimeliness::activerecord::multiparameterattributes#execute_callstack_for_multiparameter_attributes_with_timeliness()","order#existing_item_attributes=()","flowcell#existing_lane_attributes=()","object#expect_no_actions()","object#expect_no_warnings()","seqliblanescontroller#export_libqc()","seqliblanescontroller#export_libqc_csv()","seqliblanescontroller#export_libqc_setup()","psamplequeriescontroller#export_samples()","samplequeriescontroller#export_samples()","psamplequeriescontroller#export_samples_csv()","samplequeriescontroller#export_samples_csv()","psamplequeriescontroller#export_samples_setup()","samplequeriescontroller#export_samples_setup()","viewmapper::hasmanyautocompleteview::extended()","attachmentuploader#extension_white_list()","processedsample#extr_type_char()","validatestimeliness::activerecord::extract_date_from_multiparameter_attributes()","validatestimeliness::activerecord::extract_time_from_multiparameter_attributes()","spec::rails::matchers::validatetimeliness#failure_message()","processedsample#final_amt_ug()","item::find_all_by_date()","processedsample::find_all_incl_sample()","sample::find_all_source_for_dissected()","item::find_all_unique()","item::find_all_unordered()","user::find_all_with_authorization()","seqmachine::find_all_with_incidents()","researcher::find_and_group_by_active_inactive()","sample::find_and_group_by_source()","sample::find_and_group_for_clinical()","sample::find_and_group_for_patient()","sample::find_and_group_for_sample()","samplecharacteristic::find_and_group_with_conditions()","seqmachine::find_and_incr_run_nr()","alignmentref::find_and_sort_all()","consentprotocol::find_and_sort_all()","category::find_and_sortby_cgroup()","viewmapper::hasmanyautocompleteview#find_auto_complete_attributes()","applicationcontroller#find_barcode()","rundirscontroller#find_flow_cell_using_params()","flowcell::find_flowcell_incl_rundirs()","flowcell::find_flowcells_for_sequencing()","processedsample::find_for_export()","sample::find_for_export()","seqlib::find_for_export()","protocol::find_for_protocol_type()","molecularassay::find_for_query()","processedsample::find_for_query()","seqlib::find_for_query()","patient::find_id_from_mrn()","patient::find_id_using_mrn()","sample::find_newly_added_sample()","processedsample::find_one_incl_patient()","indextag::find_or_blank()","applicationcontroller#find_patient_nr()","sample::find_sample()","flowcell::find_sequencing_runs()","sample::find_with_conditions()","seqmachine::find_with_incidents()","samplecharacteristic::find_with_samples()","flowcell#flowcell_qc()","flowcell#for_publication?()","flowlane#for_publication?()","object#forget_me()","user#forget_me()","userscontroller#forgot()","applicationhelper#format_conc()","applicationhelper#format_date()","applicationhelper#format_datetime()","applicationcontroller#format_patient_nr()","flowcellscontroller#format_seq_key()","object#formats()","assignedbarcodescontroller#free_contigs()","samplecharacteristic#from_nccc?()","validatestimeliness::formats::full_hour()","object#generate_proc()","object#generate_regexp()","object#generate_regexp_str()","object#generator_cmd_line()","object#generator_script_cmd_line()","alignmentref::get_align_key()","authenticatedsystem#get_auth_data()","annotatemodels::get_model_names()","attachedfilescontroller#get_obj_with_id()","attachedfilescontroller#get_obj_with_key()","attachedfilescontroller#get_params()","rundirscontroller#get_params()","patient::get_patient_id()","pool::get_pool_label()","pool::get_pool_name()","annotatemodels::get_schema_info()","flowcell::getwith_attach()","histology::getwith_attach()","molecularassay::getwith_attach()","pathology::getwith_attach()","processedsample::getwith_attach()","sample::getwith_attach()","seqlib::getwith_attach()","user#has_role?()","samplequerieshelper#have_comments?()","uploadscontroller#help()","patient#hipaa_data()","patient#hipaa_data=()","flowcell#hiseq_qc?()","flowcell#hiseq_run?()","pool::human_attribute_name()","flowcell#id_name()","seqlib#in_multiplex_lib?()","authenticatedsystem::included()","autocomplete::included()","blame::userstamp::included()","rolerequirementsystem::included()","rolerequirementsystem::rolesecurityinstancemethods::included()","sslrequirement::included()","timetravel::timeextensions::included()","validatestimeliness::actionview::instancetag::included()","validatestimeliness::activerecord::attributemethods::included()","validatestimeliness::activerecord::multiparameterattributes::included()","validatestimeliness::validationmethods::included()","item::includes_chemical?()","alignmentrefscontroller#index()","assignedbarcodescontroller#index()","categoriescontroller#index()","consentprotocolscontroller#index()","flowcellscontroller#index()","flowcellqueriescontroller#index()","freezerlocationscontroller#index()","histologiescontroller#index()","indextagscontroller#index()","itemscontroller#index()","molassayqueriescontroller#index()","molecularassayscontroller#index()","oligopoolscontroller#index()","orderscontroller#index()","pathologiescontroller#index()","patientscontroller#index()","processedsamplescontroller#index()","protocolscontroller#index()","psamplequeriescontroller#index()","publicationscontroller#index()","researcherscontroller#index()","rundirscontroller#index()","samplequeriescontroller#index()","samplestoragecontainerscontroller#index()","seqlibscontroller#index()","seqmachinescontroller#index()","seqlibqueriescontroller#index()","storagedevicescontroller#index()","testiescontroller#index()","uploadscontroller#index()","userscontroller#index()","welcomecontroller#index()","processedsample#initial_amt_ug()","object#is_auto_complete_attribute?()","viewmapper::hasmanyautocompleteview#is_auto_complete_attribute?()","autocompleteformbuilderhelper#is_used_as_nested_attribute?()","item#item_ext_price()","seqlib#lib_barcode()","applicationhelper#link_to_add_fields()","applicationhelper#link_to_remove_fields()","molecularassayscontroller#list_added()","freezerlocation::list_all_by_room()","itemscontroller#list_companies_from_items()","samplequeriescontroller#list_samples_for_characteristic()","samplequeriescontroller#list_samples_for_patient()","itemscontroller#list_selected()","orderscontroller#list_selected()","itemscontroller#list_unordered_items()","validatestimeliness::load_error_messages()","patient::loadrecs()","patientscontroller#loadtodb()","uploadscontroller#loadtodb()","welcomecontroller#log_entry()","applicationcontroller#log_user_action()","authenticatedsystem#logged_in?()","authenticatedtesthelper#login_as()","authenticatedsystem#login_from_cookie()","authenticatedsystem#login_required()","welcomecontroller#logout()","seqmachine#machine_name_and_type()","validatestimeliness::parser::make_time()","authenticatedgenerator#manifest()","authenticatedmailergenerator#manifest()","viewmapper::hasmanyautocompleteview#manifest()","spec::rails::matchers::validatetimeliness#matches?()","validatestimeliness::formats::microseconds()","psamplequeriescontroller#model_xref()","samplequeriescontroller#model_xref()","protocol#molecule_type()","validatestimeliness::formats::month_index()","validatestimeliness::formats::month_names()","indextag::mplex_adapters()","patient#mrn()","patient#mrn=()","seqlib#multiplex_lib?()","autocompletetest::name()","applicationhelper#name_of_klass()","consentprotocol#name_ver()","protocol#name_ver()","spec::rails::matchers::validatetimeliness#negative_failure_message()","ability::new()","alignqcscontroller#new()","alignmentrefscontroller#new()","assignedbarcodescontroller#new()","attachedfilescontroller#new()","authenticatedgenerator::new()","baseloginproxy::new()","categoriescontroller#new()","consentprotocolscontroller#new()","dissectedsamplescontroller#new()","flowcellscontroller#new()","freezerlocationscontroller#new()","histologiescontroller#new()","itemscontroller#new()","molecularassayscontroller#new()","mplexlibscontroller#new()","pathologiescontroller#new()","person::new()","processedsamplescontroller#new()","protocolscontroller#new()","publicationscontroller#new()","researcherscontroller#new()","rundirscontroller#new()","samplecharacteristicscontroller#new()","seqlibscontroller#new()","seqmachinescontroller#new()","spec::rails::matchers::validatetimeliness::new()","storagedevicescontroller#new()","testiescontroller#new()","uploadscontroller#new()","userscontroller#new()","validatestimeliness::validator::new()","object#new_generator_for_test_model()","histology::new_he_barcode()","order#new_item_attributes=()","ordermailer#new_items()","dissectedsamplescontroller#new_params()","histologiescontroller#new_params()","pathologiescontroller#new_params()","processedsamplescontroller#new_params()","flowcellqueriescontroller#new_query()","itemscontroller#new_query()","molassayqueriescontroller#new_query()","orderscontroller#new_query()","psamplequeriescontroller#new_query()","samplequeriescontroller#new_query()","samplestoragecontainerscontroller#new_query()","seqlibqueriescontroller#new_query()","limsmailer#new_sample()","samplecharacteristicscontroller#new_sample()","molecularassay::next_assay_barcode()","sample::next_dissection_barcode()","processedsample::next_extraction_barcode()","flowcellscontroller#non_blank_lane_nrs()","flowcellscontroller#non_blank_lanes()","timetravel::timeextensions::classmethods#now=()","object#obj()","validatestimeliness::formats::offset_in_seconds()","seqlib#on_flow_lane?()","item#ordered?()","molecularassay#owner_abbrev()","seqlib#owner_abbrev()","applicationcontroller#param_blank?()","object#params()","object#parse()","validatestimeliness::formats::parse()","validatestimeliness::parser::parse()","object#password_required?()","user#password_required?()","applicationhelper#pct_with_parens()","object#person()","pool#pool_string()","pool#pool_string_dtl()","molecularassayscontroller#populate_assays()","alignmentref::populate_dropdown()","consentprotocol::populate_dropdown()","pool::populate_dropdown()","researcher::populate_dropdown()","samplestoragecontainer::populate_dropdown()","seqmachine::populate_dropdown()","storagedevice::populate_dropdown()","category::populate_dropdown_for_category()","categoryvalue::populate_dropdown_for_id()","seqmachine::populate_dropdown_grouped()","category::populate_dropdowns()","itemscontroller#populate_items()","publicationscontroller#populate_lanes()","seqlibscontroller#populate_libs()","samplestoragecontainer#position_sort()","dissectedsamplescontroller#prepare_for_render_new()","flowcellscontroller#prepare_for_render_new()","histologiescontroller#prepare_for_render_new()","molecularassay#protocol_name()","flowcell#publication_ids()","flowlane#publication_ids()","patientscontroller#query_params()","protocolscontroller#query_params()","annotatemodels::quote()","assignedbarcode#range_start_chk()","validatestimeliness::activerecord::attributemethods#read_attribute_before_type_cast_with_timeliness()","object#read_fixture()","order#received?()","user#recently_reset?()","authenticatedsystem#redirect_back_or_default()","itemscontroller#reload_defaults()","molecularassayscontroller#reload_defaults()","seqlibscontroller#reload_lib_defaults()","object#remember_me()","user#remember_me()","user#remember_me_for()","user#remember_me_until()","object#remember_token?()","user#remember_token?()","validatestimeliness::formats::remove_formats()","categorieshelper#remove_link_unless_new_record()","applicationhelper#remove_this_line()","validatestimeliness::formats::remove_us_formats()","item#requester_abbrev()","rolerequirementsystem::rolesecurityclassmethods#require_role()","userscontroller#reset()","authenticatedtesthelper#reset!()","usernotifier#reset_notification()","rolerequirementsystem::rolesecurityclassmethods#reset_role_requirements!()","user#role_symbols()","freezerlocation#room_and_freezer()","processedsample#room_and_freezer()","sample#room_and_freezer()","samplestoragecontainer#room_and_freezer()","applicationhelper#row_underline()","sample#sample_amt()","sample#sample_category()","seqlib#sample_conc_ngul()","seqlib#sample_conc_nm()","seqlib#sample_conc_with_uom()","samplecharacteristicscontroller#sample_dropdowns()","molecularassayshelper#sample_vol()","autocompleteformbuilderhelper#sanitized_object_name()","notable#save()","order#save_items()","flowcell#save_lanes()","flowcellscontroller#seq_dropdowns()","flowcell#seq_run_key()","flowcell#sequenced?()","orderscontroller#set_chemical_flag()","applicationcontroller#set_current_user()","seqlib#set_default_values()","rundirscontroller#set_error_message()","sslrequirementcontroller#set_flash()","flowcell#set_flowcell_status()","autocompleteformbuilderhelpertest#setup()","autocompletenestedattributestest#setup()","autocompletetest#setup()","blametest#setup()","object#setup()","overrideblametest#setup()","partialblametest#setup()","sslrequirementtest#setup()","flowcellscontroller#setup_dropdowns()","mplexlibscontroller#setup_dropdowns()","validatestimeliness::setup_for_rails()","flowcellscontroller#setup_params()","mplexlibscontroller#setup_params()","object#setup_parent_test_model()","psamplequeriescontroller#setup_sql_params()","samplequeriescontroller#setup_sql_params()","seqlibqueriescontroller#setup_sql_params()","object#setup_test_model()","object#setup_test_model_without_nested_attributes()","object#setup_test_table()","object#should_have_error()","object#should_have_no_error()","alignmentrefscontroller#show()","assignedbarcodescontroller#show()","attachedfilescontroller#show()","categoriescontroller#show()","consentprotocolscontroller#show()","flowcellscontroller#show()","freezerlocationscontroller#show()","histologiescontroller#show()","itemscontroller#show()","molecularassayscontroller#show()","oligopoolscontroller#show()","orderscontroller#show()","pathologiescontroller#show()","patientscontroller#show()","processedsamplescontroller#show()","protocolscontroller#show()","publicationscontroller#show()","researcherscontroller#show()","rundirscontroller#show()","samplecharacteristicscontroller#show()","samplescontroller#show()","seqlibscontroller#show()","seqmachinescontroller#show()","seqliblanescontroller#show()","storagedevicescontroller#show()","testiescontroller#show()","uploadscontroller#show()","processedsamplescontroller#show_by_sample()","uploadscontroller#show_files()","flowcellscontroller#show_publications()","flowcellscontroller#show_qc()","welcomecontroller#signup()","usernotifier#signup_notification()","libsample#singleplex_lib()","libsample#singleplex_lib=()","object#some_other_models_attributes=()","attachedfilescontroller#source_rec()","viewmapper::hasmanyautocompleteview::source_root()","viewmapper::hasmanyautocompleteview#source_roots_for_view()","libsample#source_sample_name()","molecularassay#source_sample_name()","libsample#source_sample_name=()","molecularassay#source_sample_name=()","indextag::splex_adapters()","applicationcontroller#sql_condition()","applicationcontroller#sql_conditions_for_date_range()","applicationcontroller#sql_conditions_for_range()","applicationcontroller#sql_value()","activerecordextension::classmethods#sql_where()","applicationcontroller#sql_where()","sslrequirement::classmethods#ssl_allowed()","sslrequirement#ssl_allowed?()","sslrequirement::classmethods#ssl_required()","sslrequirement#ssl_required?()","attachmentuploader#store_dir()","authenticatedsystem#store_location()","object#stub_actions()","object#stub_warnings()","flowcellquery::table_name()","molassayquery::table_name()","psamplequery::table_name()","samplequery::table_name()","seqlibquery::table_name()","indextag#tag_ctr()","libsample#tag_sequence()","builderhelper#tagged_form_for()","autocompleteformbuilderhelpertest#test_ajax_param()","autocompletenestedattributestest#test_ajax_param()","autocompleteformbuilderhelpertest#test_ajax_url()","autocompletenestedattributestest#test_ajax_url()","sslrequirementtest#test_allowed_with_ssl()","sslrequirementtest#test_allowed_without_ssl()","autocompletetest#test_auto_complete_field()","autocompleteformbuilderhelpertest#test_auto_complete_field_in_normal_form_does_not_have_random_id()","autocompletetest#test_auto_complete_for_with_block()","autocompletetest#test_auto_complete_result()","autocompleteformbuilderhelpertest#test_auto_index_value_for_existing_record()","autocompleteformbuilderhelpertest#test_auto_index_value_for_new_record()","autocompleteformbuilderhelpertest#test_child_index_completion_option()","autocompletenestedattributestest#test_child_index_completion_option()","autocompleteformbuilderhelpertest#test_child_index_completion_option_overrides_fields_for_option()","autocompletenestedattributestest#test_child_index_completion_option_overrides_fields_for_option()","autocompleteformbuilderhelpertest#test_child_index_fields_for_option()","autocompletenestedattributestest#test_child_index_fields_for_option()","autocompleteformbuilderhelpertest#test_compare_macro_to_fields_for_in_nested_form()","autocompleteformbuilderhelpertest#test_compare_to_macro_in_normal_form()","autocompleteformbuilderhelpertest#test_compare_to_macro_in_normal_form_with_symbol()","blametest#test_create()","overrideblametest#test_create()","partialblametest#test_create()","autocompletetest#test_default_auto_complete_for()","sslrequirementtest#test_disallowed_with_ssl()","sslrequirementtest#test_disallowed_without_ssl()","autocompletenestedattributestest#test_is_used_as_nested_attribute()","autocompletenestedattributestest#test_nested_attributes_all_have_different_ids()","sslrequirementtest#test_not_redirecting_to_http_does_not_preserve_the_flash()","sslrequirementtest#test_not_redirecting_to_https_does_not_preserve_the_flash()","autocompleteformbuilderhelpertest#test_object_value()","autocompletenestedattributestest#test_object_value()","blametest#test_partial_updates_disabled()","partialblametest#test_partial_updates_enabled()","sslrequirementtest#test_redirect_to_http_preserves_flash()","sslrequirementtest#test_redirect_to_https_preserves_flash()","sslrequirementtest#test_required_with_ssl()","sslrequirementtest#test_required_without_ssl()","autocompletenestedattributestest#test_sanitized_object_name()","object#test_should_create_()","autocompletetest#test_text_field_with_auto_complete()","autocompleteformbuilderhelpertest#test_two_auto_complete_fields_in_nested_form_have_different_ids()","blametest#test_update()","overrideblametest#test_update()","partialblametest#test_update()","object#testies_attributes=()","processedsamplescontroller#testing()","samplescontroller#testing()","autocompleteformbuilderhelper#text_field_with_auto_complete()","autocompletemacroshelper#text_field_with_auto_complete()","object#time_array_to_string()","validatestimeliness::activerecord::time_array_to_string()","pathology#tnm()","person#to_param()","validatestimeliness::formats::unambiguous_year()","seqlib::unique_projects()","createparents::up()","sample#upd_dissections()","flowcellscontroller#upd_for_sequencing()","sample#upd_from_source_sample()","order#upd_items_recvd()","item::upd_items_recvd_for_order()","flowlane::upd_lib_lanes()","seqlib::upd_lib_status()","seqlib::upd_mplex_fields()","libsample::upd_mplex_sample_fields()","seqlib::upd_mplex_splex()","flowlane::upd_multi_lanes()","libsample::upd_multi_lib_samples()","item::upd_orderid()","sample#upd_parent_ids()","flowlane::upd_seq_key()","alignqcscontroller#update()","alignmentrefscontroller#update()","assignedbarcodescontroller#update()","categoriescontroller#update()","consentprotocolscontroller#update()","dissectedsamplescontroller#update()","flowcellscontroller#update()","freezerlocationscontroller#update()","histologiescontroller#update()","itemscontroller#update()","molecularassayscontroller#update()","mplexlibscontroller#update()","object#update()","orderscontroller#update()","pathologiescontroller#update()","patientscontroller#update()","processedsamplescontroller#update()","protocolscontroller#update()","publicationscontroller#update()","researcherscontroller#update()","rundirscontroller#update()","samplecharacteristicscontroller#update()","samplescontroller#update()","seqlibscontroller#update()","seqmachinescontroller#update()","storagedevicescontroller#update()","testiescontroller#update()","userscontroller#update()","attachedfile#update_document_attributes()","itemscontroller#update_fields()","molecularassayscontroller#update_fields()","rundirscontroller#update_multi_flagged()","autocompleteformbuilderhelpertest#url_for()","autocompletenestedattributestest#url_for()","autocompletetest#url_for()","rolerequirementsystem::rolesecurityinstancemethods#url_options_authenticate?()","rolerequirementsystem::rolesecurityclassmethods#user_authorized_for?()","applicationhelper#user_has_access?()","welcomecontroller#user_login()","applicationhelper#user_role_is?()","overrideblametest::sprocket#userstamp_object()","blame::userstampmigrationhelper#userstamps()","item#validate()","libsample#validate()","object#validate()","patient#validate()","samplequery#validate()","seqlib#validate()","seqlibquery#validate()","viewmapper::hasmanyautocompleteview#validate()","spec::rails::matchers#validate_date()","spec::rails::matchers#validate_datetime()","flowcellscontroller#validate_lane_nrs()","spec::rails::matchers#validate_time()","object#validate_with()","validatestimeliness::validationmethods::classmethods#validates_date()","validatestimeliness::validationmethods::classmethods#validates_datetime()","validatestimeliness::validationmethods::classmethods#validates_time()","validatestimeliness::actionview::instancetag#value_with_timeliness()","molecularassay#vol_from_source()","validatestimeliness::activerecord::attributemethods#write_date_time_attribute()",""],"info":[["Ability","","Ability.html","","<p>rescue clause for unauthorized actions, is in application controller.\n"],["ActiveRecordExtension","","ActiveRecordExtension.html","",""],["ActiveRecordExtension::ClassMethods","","ActiveRecordExtension/ClassMethods.html","","<p>Add instance methods here as:                                              \n#\n\n<pre class=\"ruby\"><span class=\"ruby-keyword\">def</span> <span class=\"ruby-identifier\">foo</span> <span class=\"ruby-operator\">...</span>\n</pre>\n"],["AlignQc","","AlignQc.html","","<p>Schema Information\n<p>Table name: align_qc\n\n<pre>id                       :integer(4)      not null, primary key ...</pre>\n"],["AlignQcsController","","AlignQcsController.html","",""],["AlignmentRef","","AlignmentRef.html","","<p>Schema Information\n<p>Table name: alignment_refs\n\n<pre>id             :integer(4)      not null, primary key\nalignment_key ...</pre>\n"],["AlignmentRefsController","","AlignmentRefsController.html","",""],["AnnotateModels","","AnnotateModels.html","",""],["ApplicationController","","ApplicationController.html","",""],["ApplicationHelper","","ApplicationHelper.html","",""],["AssignedBarcode","","AssignedBarcode.html","","<p>Schema Information\n<p>Table name: assigned_barcodes\n\n<pre>id            :integer(4)      not null, primary key\nassign_date ...</pre>\n"],["AssignedBarcodesController","","AssignedBarcodesController.html","",""],["AttachedFile","","AttachedFile.html","","<p>Schema Information\n<p>Table name: attached_files\n\n<pre>id                    :integer(4)      not null, primary ...</pre>\n"],["AttachedFilesController","","AttachedFilesController.html","",""],["AttachmentUploader","","AttachmentUploader.html","",""],["AuthenticatedGenerator","","AuthenticatedGenerator.html","",""],["AuthenticatedMailerGenerator","","AuthenticatedMailerGenerator.html","",""],["AuthenticatedSystem","","AuthenticatedSystem.html","",""],["AuthenticatedTestHelper","","AuthenticatedTestHelper.html","",""],["AutoComplete","","AutoComplete.html","",""],["AutoComplete::ClassMethods","","AutoComplete/ClassMethods.html","","<p>Example:\n\n<pre class=\"ruby\"><span class=\"ruby-comment\"># Controller</span>\n<span class=\"ruby-keyword\">class</span> <span class=\"ruby-constant\">BlogController</span> <span class=\"ruby-operator\">&lt;</span> <span class=\"ruby-constant\">ApplicationController</span>\n  <span class=\"ruby-identifier\">auto_complete_for</span> :<span class=\"ruby-identifier\">post</span>, :<span class=\"ruby-identifier\">title</span>\n<span class=\"ruby-keyword\">end</span> <span class=\"ruby-operator\">...</span>\n</pre>\n"],["AutoCompleteFormBuilderHelper","","AutoCompleteFormBuilderHelper.html","",""],["AutoCompleteFormBuilderHelperTest","","AutoCompleteFormBuilderHelperTest.html","",""],["AutoCompleteMacrosHelper","","AutoCompleteMacrosHelper.html","",""],["AutoCompleteNestedAttributesTest","","AutoCompleteNestedAttributesTest.html","",""],["AutoCompleteTest","","AutoCompleteTest.html","",""],["BaseLoginProxy","","BaseLoginProxy.html","",""],["Blame","","Blame.html","",""],["Blame::Userstamp","","Blame/Userstamp.html","",""],["Blame::UserstampMigrationHelper","","Blame/UserstampMigrationHelper.html","",""],["BlameTest","","BlameTest.html","",""],["BuilderHelper","","BuilderHelper.html","",""],["CategoriesController","","CategoriesController.html","",""],["CategoriesHelper","","CategoriesHelper.html","",""],["Category","","Category.html","","<p>Schema Information\n<p>Table name: categories\n\n<pre>id                   :integer(4)      not null, primary key\ncgroup_id ...</pre>\n"],["CategoryValue","","CategoryValue.html","","<p>Schema Information\n<p>Table name: category_values\n\n<pre>id          :integer(4)      not null, primary key\ncategory_id ...</pre>\n"],["Cgroup","","Cgroup.html","","<p>Schema Information\n<p>Table name: cgroups\n\n<pre>id         :integer(4)      not null, primary key\ngroup_name :string(25) ...</pre>\n"],["ConsentProtocol","","ConsentProtocol.html","","<p>Schema Information\n<p>Table name: consent_protocols\n\n<pre>id               :integer(4)      not null, primary key ...</pre>\n"],["ConsentProtocolsController","","ConsentProtocolsController.html","",""],["CreateParents","","CreateParents.html","",""],["CustomMessages","","CustomMessages.html","",""],["DissectedSamplesController","","DissectedSamplesController.html","",""],["FlowCell","","FlowCell.html","","<p>Schema Information\n<p>Table name: flow_cells\n\n<pre>id              :integer(4)      not null, primary key\nflowcell_date ...</pre>\n"],["FlowCellsController","","FlowCellsController.html","",""],["FlowLane","","FlowLane.html","","<p>Schema Information\n<p>Table name: flow_lanes\n\n<pre>id               :integer(4)      not null, primary key\nflow_cell_id ...</pre>\n"],["FlowcellQueriesController","","FlowcellQueriesController.html","",""],["FlowcellQuery","","FlowcellQuery.html","","<p>Schema Information\n<p>Table name: flowcell_queries\n\n<pre>run_nr_type  :string\nrun_nr       :string\nmachine_type ...</pre>\n"],["FreezerLocation","","FreezerLocation.html","","<p>Schema Information\n<p>Table name: freezer_locations\n\n<pre>id          :integer(4)      not null, primary key\nroom_nr ...</pre>\n"],["FreezerLocationsController","","FreezerLocationsController.html","",""],["HasManyAutoCompleteViewTest","","HasManyAutoCompleteViewTest.html","",""],["HistologiesController","","HistologiesController.html","",""],["HistologiesHelper","","HistologiesHelper.html","",""],["Histology","","Histology.html","","<p>Schema Information\n<p>Table name: histologies\n\n<pre>id                        :integer(4)      not null, primary ...</pre>\n"],["HttpLoginProxy","","HttpLoginProxy.html","",""],["IndexTag","","IndexTag.html","","<p>Schema Information\n<p>Table name: index_tags\n\n<pre>id              :integer(4)      not null, primary key\nruntype_adapter ...</pre>\n"],["IndexTagsController","","IndexTagsController.html","",""],["InventoryDB","","InventoryDB.html","",""],["Item","","Item.html","","<p>Schema Information\n<p>Table name: items\n\n<pre>id               :integer(4)      not null, primary key\norder_id  ...</pre>\n"],["ItemQuery","","ItemQuery.html","","<p>Schema Information\n<p>Table name: no_tables\n\n<pre>company_name   :string\nrequester_name :string\nitem_status    :string ...</pre>\n"],["ItemsController","","ItemsController.html","",""],["LibBarcode","","LibBarcode.html","","<p>Schema Information\n<p>Table name: lib_barcodes\n\n<pre>id            :integer(4)      not null, primary key\nbarcode_min ...</pre>\n"],["LibSample","","LibSample.html","","<p>Schema Information\n<p>Table name: lib_samples\n\n<pre>id                  :integer(4)      not null, primary key\nseq_lib_id ...</pre>\n"],["LimsCommon","","LimsCommon.html","",""],["LimsMailer","","LimsMailer.html","",""],["MachineIncident","","MachineIncident.html","","<p>Schema Information\n<p>Table name: machine_incidents\n\n<pre>id                   :integer(4)      not null, primary ...</pre>\n"],["MolassayQueriesController","","MolassayQueriesController.html","",""],["MolassayQuery","","MolassayQuery.html","","<p>Schema Information\n<p>Table name: molassay_queries\n\n<pre>patient_id :string\nfrom_date  :date\nto_date    :date\nowner ...</pre>\n"],["MolecularAssay","","MolecularAssay.html","","<p>Schema Information\n<p>Table name: molecular_assays\n\n<pre>id                  :integer(4)      not null, primary ...</pre>\n"],["MolecularAssaysController","","MolecularAssaysController.html","",""],["MolecularAssaysHelper","","MolecularAssaysHelper.html","",""],["Monkey","","Monkey.html","",""],["MplexLibsController","","MplexLibsController.html","",""],["NoTable","","NoTable.html","",""],["NoValidation","","NoValidation.html","",""],["Object","","Object.html","",""],["OligoPoolsController","","OligoPoolsController.html","",""],["Order","","Order.html","","<p>Schema Information\n<p>Table name: orders\n\n<pre>id             :integer(4)      not null, primary key\ncompany_name ...</pre>\n"],["OrderMailer","","OrderMailer.html","",""],["OrdersController","","OrdersController.html","",""],["OverrideBlameTest","","OverrideBlameTest.html","",""],["OverrideBlameTest::Sprocket","","OverrideBlameTest/Sprocket.html","","<p>Override the default userstamp_object method\n"],["Parent","","Parent.html","",""],["PartialBlameTest","","PartialBlameTest.html","",""],["PathologiesController","","PathologiesController.html","",""],["Pathology","","Pathology.html","","<p>Schema Information\n<p>Table name: pathologies\n\n<pre>id                       :integer(4)      not null, primary ...</pre>\n"],["Patient","","Patient.html","","<p>Schema Information\n<p>Table name: patients\n\n<pre>id                    :integer(4)      not null, primary key\nclinical_id_encrypted ...</pre>\n"],["PatientsController","","PatientsController.html","",""],["Person","","Person.html","",""],["Pool","","Pool.html","","<p>Schema Information\n<p>Table name: pools\n\n<pre>id                  :integer(4)      not null, primary key\npool_name ...</pre>\n"],["Primer","","Primer.html","","<p>Schema Information\n<p>Table name: primers\n\n<pre>id                  :integer(4)      not null, primary key\npool_name ...</pre>\n"],["ProcessedSample","","ProcessedSample.html","","<p>Schema Information\n<p>Table name: processed_samples\n\n<pre>id                  :integer(4)      not null, primary ...</pre>\n"],["ProcessedSamplesController","","ProcessedSamplesController.html","",""],["Protocol","","Protocol.html","","<p>Schema Information\n<p>Table name: protocols\n\n<pre>id               :integer(4)      not null, primary key\nprotocol_name ...</pre>\n"],["ProtocolsController","","ProtocolsController.html","",""],["PsampleQueriesController","","PsampleQueriesController.html","",""],["PsampleQuery","","PsampleQuery.html","","<p>Schema Information\n<p>Table name: psample_queries\n\n<pre>mrn                 :string\npatient_id          :string ...</pre>\n"],["Publication","","Publication.html","",""],["PublicationsController","","PublicationsController.html","",""],["Rails","","Rails.html","",""],["Rails::Generator","","Rails/Generator.html","",""],["Rails::Generator::NamedBase","","Rails/Generator/NamedBase.html","",""],["Researcher","","Researcher.html","","<p>Schema Information\n<p>Table name: researchers\n\n<pre>id                  :integer(4)      not null, primary key\nuser_id ...</pre>\n"],["ResearchersController","","ResearchersController.html","",""],["Role","","Role.html","","<p>Schema Information\n<p>Table name: roles\n\n<pre>id   :integer(4)      not null, primary key\nname :string(255)</pre>\n"],["RoleRequirementSystem","","RoleRequirementSystem.html","","<p>Main module for authentication.\n<p>Include this in ApplicationController to activate RoleRequirement\n<p>See  …\n"],["RoleRequirementSystem::RoleSecurityClassMethods","","RoleRequirementSystem/RoleSecurityClassMethods.html","",""],["RoleRequirementSystem::RoleSecurityInstanceMethods","","RoleRequirementSystem/RoleSecurityInstanceMethods.html","",""],["RoleRequirementTestHelper","","RoleRequirementTestHelper.html","","<p>Include this is test_helper.rb to enable test-case helper support for\nRoleRequirement via:\n\n<pre>include RoleRequirementTestHelper</pre>\n"],["RunDir","","RunDir.html","","<p>Schema Information\n<p>Table name: run_dirs\n\n<pre>id                :integer(4)      not null, primary key\nflow_cell_id ...</pre>\n"],["RunDirsController","","RunDirsController.html","",""],["Sample","","Sample.html","","<p>Schema Information\n<p>Table name: samples\n\n<pre>id                       :integer(4)      not null, primary key ...</pre>\n"],["SampleCharacteristic","","SampleCharacteristic.html","","<p>Schema Information\n<p>Table name: sample_characteristics\n\n<pre>id                  :integer(4)      not null, primary ...</pre>\n"],["SampleCharacteristicsController","","SampleCharacteristicsController.html","",""],["SampleQueriesController","","SampleQueriesController.html","",""],["SampleQueriesHelper","","SampleQueriesHelper.html","",""],["SampleQuery","","SampleQuery.html","","<p>Schema Information\n<p>Table name: sample_queries\n\n<pre>mrn                 :string\npatient_id          :string\nbarcode_from ...</pre>\n"],["SampleStorageContainer","","SampleStorageContainer.html","","<p>Schema Information\n<p>Table name: sample_containers\n\n<pre>id                     :integer(4)      not null, primary ...</pre>\n"],["SampleStorageContainersController","","SampleStorageContainersController.html","",""],["SamplesController","","SamplesController.html","",""],["SeqLib","","SeqLib.html","","<p>Schema Information\n<p>Table name: seq_libs\n\n<pre>id                  :integer(4)      not null, primary key\nbarcode_key ...</pre>\n"],["SeqLibsController","","SeqLibsController.html","",""],["SeqLibsHelper","","SeqLibsHelper.html","",""],["SeqMachine","","SeqMachine.html","","<p>Schema Information\n<p>Table name: seq_machines\n\n<pre>id            :integer(4)      not null, primary key\nmachine_name ...</pre>\n"],["SeqMachinesController","","SeqMachinesController.html","",""],["SeqlibLanesController","","SeqlibLanesController.html","",""],["SeqlibQueriesController","","SeqlibQueriesController.html","",""],["SeqlibQuery","","SeqlibQuery.html","","<p>Schema Information\n<p>Table name: seqlib_queries\n\n<pre>owner         :string\nproject       :string\nlib_name     ...</pre>\n"],["Spec","","Spec.html","",""],["Spec::Rails","","Spec/Rails.html","",""],["Spec::Rails::Matchers","","Spec/Rails/Matchers.html","",""],["Spec::Rails::Matchers::ValidateTimeliness","","Spec/Rails/Matchers/ValidateTimeliness.html","",""],["Sprocket","","Sprocket.html","",""],["SslRequirement","","SslRequirement.html","","<p>Copyright © 2005 David Heinemeier Hansson\n<p>Permission is hereby granted, free of charge, to any person …\n"],["SslRequirement::ClassMethods","","SslRequirement/ClassMethods.html","",""],["SslRequirementController","","SslRequirementController.html","",""],["SslRequirementTest","","SslRequirementTest.html","",""],["StorageDevice","","StorageDevice.html","","<p>Schema Information\n<p>Table name: storage_devices\n\n<pre>id               :integer(4)      not null, primary key ...</pre>\n"],["StorageDevicesController","","StorageDevicesController.html","",""],["TaggedBuilder","","TaggedBuilder.html","",""],["Test","","Test.html","",""],["Test::Unit","","Test/Unit.html","",""],["Test::Unit::TestCase","","Test/Unit/TestCase.html","",""],["TestiesController","","TestiesController.html","",""],["TimeTravel","","TimeTravel.html","",""],["TimeTravel::TimeExtensions","","TimeTravel/TimeExtensions.html","",""],["TimeTravel::TimeExtensions::ClassMethods","","TimeTravel/TimeExtensions/ClassMethods.html","",""],["UploadsController","","UploadsController.html","",""],["User","","User.html","",""],["UserLog","","UserLog.html","","<p>Schema Information\n<p>Table name: user_logs\n\n<pre>id              :integer(4)      not null, primary key\nip_address ...</pre>\n"],["UserLogin","","UserLogin.html","","<p>Schema Information\n<p>Table name: user_logins\n\n<pre>id               :integer(4)      not null, primary key\nip_address ...</pre>\n"],["UserNotifier","","UserNotifier.html","",""],["UserObserver","","UserObserver.html","",""],["UsersController","","UsersController.html","",""],["ValidatesTimeliness","","ValidatesTimeliness.html","","<p>TODO remove this from the plugin for v3.\n<p>TODO remove deprecated option :equal_to\n"],["ValidatesTimeliness::ActionView","","ValidatesTimeliness/ActionView.html","",""],["ValidatesTimeliness::ActionView::InstanceTag","","ValidatesTimeliness/ActionView/InstanceTag.html","","<p>Intercepts the date and time select helpers to reuse the values from the\nthe params rather than the parsed …\n"],["ValidatesTimeliness::ActiveRecord","","ValidatesTimeliness/ActiveRecord.html","",""],["ValidatesTimeliness::ActiveRecord::AttributeMethods","","ValidatesTimeliness/ActiveRecord/AttributeMethods.html","","<p>Overrides write method for date, time and datetime columns to use plugin\nparser. Also adds mechanism …\n"],["ValidatesTimeliness::ActiveRecord::AttributeMethods::ClassMethods","","ValidatesTimeliness/ActiveRecord/AttributeMethods/ClassMethods.html","",""],["ValidatesTimeliness::ActiveRecord::MultiparameterAttributes","","ValidatesTimeliness/ActiveRecord/MultiparameterAttributes.html","",""],["ValidatesTimeliness::Formats","","ValidatesTimeliness/Formats.html","","<p>A date and time parsing library which allows you to add custom formats\nusing simple predefined tokens. …\n"],["ValidatesTimeliness::Parser","","ValidatesTimeliness/Parser.html","",""],["ValidatesTimeliness::ValidationMethods","","ValidatesTimeliness/ValidationMethods.html","",""],["ValidatesTimeliness::ValidationMethods::ClassMethods","","ValidatesTimeliness/ValidationMethods/ClassMethods.html","",""],["ValidatesTimeliness::Validator","","ValidatesTimeliness/Validator.html","",""],["ViewMapper","","ViewMapper.html","",""],["ViewMapper::HasManyAutoCompleteView","","ViewMapper/HasManyAutoCompleteView.html","",""],["WelcomeController","","WelcomeController.html","",""],["Widget","","Widget.html","",""],["WithValidation","","WithValidation.html","",""],["XmlLoginProxy","","XmlLoginProxy.html","",""],["a","SslRequirementController","SslRequirementController.html#method-i-a","()",""],["abbr_month_names","ValidatesTimeliness::Formats","ValidatesTimeliness/Formats.html#method-c-abbr_month_names","()",""],["accept","AuthenticatedTestHelper","AuthenticatedTestHelper.html#method-i-accept","(accept)",""],["access_denied","AuthenticatedSystem","AuthenticatedSystem.html#method-i-access_denied","()","<p>to access the requested action.  For example, a popup window might simply\nclose itself.\n"],["access_denied","RoleRequirementSystem::RoleSecurityInstanceMethods","RoleRequirementSystem/RoleSecurityInstanceMethods.html#method-i-access_denied","()",""],["activation","UserNotifier","UserNotifier.html#method-i-activation","(user)",""],["add_auto_complete_manifest","ViewMapper::HasManyAutoCompleteView","ViewMapper/HasManyAutoCompleteView.html#method-i-add_auto_complete_manifest","(m)",""],["add_auto_complete_route","ViewMapper::HasManyAutoCompleteView","ViewMapper/HasManyAutoCompleteView.html#method-i-add_auto_complete_route","(manifest, model_name, text_field)",""],["add_entry","UserLog","UserLog.html#method-c-add_entry","(controller, current_user, ip_address)",""],["add_entry","UserLogin","UserLogin.html#method-c-add_entry","(login_out, current_user, ip_address)",""],["add_formats","ValidatesTimeliness::Formats","ValidatesTimeliness/Formats.html#method-c-add_formats","(type, *add_formats)","<p>Adds new formats. Must specify format type and can specify a :before option\nto nominate which format …\n"],["add_new_sample","SampleCharacteristicsController","SampleCharacteristicsController.html#method-i-add_new_sample","()",""],["add_qc_for_flow_cell","AlignQc","AlignQc.html#method-c-add_qc_for_flow_cell","(flow_cell_id)",""],["add_to_select","PsampleQueriesController","PsampleQueriesController.html#method-i-add_to_select","(where_select, attr, val)",""],["add_to_select","SampleQueriesController","SampleQueriesController.html#method-i-add_to_select","(where_select, attr, val)",""],["add_to_select","SeqlibQueriesController","SeqlibQueriesController.html#method-i-add_to_select","(where_select, attr, val)",""],["add_to_values","PsampleQueriesController","PsampleQueriesController.html#method-i-add_to_values","(where_values, attr, val)",""],["add_to_values","SampleQueriesController","SampleQueriesController.html#method-i-add_to_values","(where_values, attr, val)",""],["add_to_values","SeqlibQueriesController","SeqlibQueriesController.html#method-i-add_to_values","(where_values, attr, val)",""],["add_user","WelcomeController","WelcomeController.html#method-i-add_user","()",""],["add_value_link","CategoriesHelper","CategoriesHelper.html#method-i-add_value_link","(name, form)",""],["after_save","UserObserver","UserObserver.html#method-i-after_save","(user)","<p>def after_create(user)\n\n<pre>UserNotifier.deliver_signup_notification(user)</pre>\n<p>end\n"],["alt_run_or_descr","FlowCell","FlowCell.html#method-i-alt_run_or_descr","()",""],["annotate","AnnotateModels","AnnotateModels.html#method-c-annotate","(klass, header)","<p>Given the name of an ActiveRecord class, create a schema info block\n(basically a comment containing information …\n"],["annotate_one_file","AnnotateModels","AnnotateModels.html#method-c-annotate_one_file","(file_name, info_block)","<p>Add a schema block to a file. If the file already contains a schema info\nblock (a comment starting with …\n"],["array_to_string","ApplicationController","ApplicationController.html#method-i-array_to_string","(arry, delim=',')",""],["assert_difference","AuthenticatedTestHelper","AuthenticatedTestHelper.html#method-i-assert_difference","(object, method = nil, difference = 1)","<p>project.ioni.st/post/217#post-217\n\n<pre class=\"ruby\"><span class=\"ruby-keyword\">def</span> <span class=\"ruby-identifier\">test_new_publication</span>\n  <span class=\"ruby-identifier\">assert_difference</span>(<span class=\"ruby-constant\">Publication</span>, :<span class=\"ruby-identifier\">count</span>) <span class=\"ruby-keyword\">do</span> <span class=\"ruby-operator\">...</span>\n</pre>\n"],["assert_http_authentication_required","AuthenticatedTestHelper","AuthenticatedTestHelper.html#method-i-assert_http_authentication_required","(login = nil)",""],["assert_no_difference","AuthenticatedTestHelper","AuthenticatedTestHelper.html#method-i-assert_no_difference","(object, method, &block)",""],["assert_requires_login","AuthenticatedTestHelper","AuthenticatedTestHelper.html#method-i-assert_requires_login","(login = nil)","<p>Assert the block redirects to the login\n\n<pre class=\"ruby\"><span class=\"ruby-identifier\">assert_requires_login</span>(:<span class=\"ruby-identifier\">bob</span>) { <span class=\"ruby-operator\">|</span><span class=\"ruby-identifier\">c</span><span class=\"ruby-operator\">|</span> <span class=\"ruby-identifier\">c</span>.<span class=\"ruby-identifier\">get</span> :<span class=\"ruby-identifier\">edit</span>, :<span class=\"ruby-identifier\">id</span> =<span class=\"ruby-operator\">&gt;</span> <span class=\"ruby-value\">1</span> }\n</pre>\n"],["assert_user_can_access","RoleRequirementTestHelper","RoleRequirementTestHelper.html#method-i-assert_user_can_access","(user, actions, params = {})","<p>Makes sure a user can access the given action\n<p>Example:\n\n<pre>assert_user_can_access(:quentin, &quot;index&quot;)</pre>\n"],["assert_user_cannot_access","RoleRequirementTestHelper","RoleRequirementTestHelper.html#method-i-assert_user_cannot_access","(user, actions, params = {})",""],["assert_user_cant_access","RoleRequirementTestHelper","RoleRequirementTestHelper.html#method-i-assert_user_cant_access","(user, actions, params = {})","<p>Makes sure a user cant access the given action\n<p>Example:\n\n<pre>assert_user_cant_access(:quentin, &quot;destroy&quot;, :listing_id ...</pre>\n"],["assert_users_access","RoleRequirementTestHelper","RoleRequirementTestHelper.html#method-i-assert_users_access","(users_access_list, actions, params = {})","<p>Check a list of users against a set of actions with parameters.\n<p>Parameters:\n\n<pre>users_access_list - a hash ...</pre>\n"],["assigned_contigs","AssignedBarcodesController","AssignedBarcodesController.html#method-i-assigned_contigs","(assigned_barcodes)",""],["at_time","Object","Object.html#method-i-at_time","(time)",""],["attribute_for_type","Object","Object.html#method-i-attribute_for_type","(type)",""],["attrs_for_sequencing","FlowCellsController","FlowCellsController.html#method-i-attrs_for_sequencing","(params)",""],["authenticate","HttpLoginProxy","HttpLoginProxy.html#method-i-authenticate","()",""],["authenticate","Object","Object.html#method-c-authenticate","(login, password)","<p>Authenticates a user by their login name and unencrypted password.  Returns\nthe user or nil.\n"],["authenticate","User","User.html#method-c-authenticate","(login, password)","<p>Authenticates a user by their login name and unencrypted password.  Returns\nthe user or nil.\n"],["authenticate","XmlLoginProxy","XmlLoginProxy.html#method-i-authenticate","()",""],["authenticated?","Object","Object.html#method-i-authenticated-3F","(password)",""],["authenticated?","User","User.html#method-i-authenticated-3F","(password)",""],["authorize_as","AuthenticatedTestHelper","AuthenticatedTestHelper.html#method-i-authorize_as","(user)",""],["authorized?","AuthenticatedSystem","AuthenticatedSystem.html#method-i-authorized-3F","()","<p>Check if the user is authorized.\n<p>Override this method in your controllers if you want to restrict access …\n"],["auto_complete_attributes","ViewMapper::HasManyAutoCompleteView","ViewMapper/HasManyAutoCompleteView.html#method-i-auto_complete_attributes","()",""],["auto_complete_attributes_for_model","ViewMapper::HasManyAutoCompleteView","ViewMapper/HasManyAutoCompleteView.html#method-i-auto_complete_attributes_for_model","(model_info)",""],["auto_complete_attributes_from_command_line","ViewMapper::HasManyAutoCompleteView","ViewMapper/HasManyAutoCompleteView.html#method-i-auto_complete_attributes_from_command_line","()",""],["auto_complete_field","AutoCompleteMacrosHelper","AutoCompleteMacrosHelper.html#method-i-auto_complete_field","(field_id, options = {})","<p>Adds AJAX autocomplete functionality to the text input field with the  DOM\nID specified by <code>field_id</code>. …\n"],["auto_complete_field_with_style_and_script","AutoCompleteMacrosHelper","AutoCompleteMacrosHelper.html#method-i-auto_complete_field_with_style_and_script","(object, method, tag_options = {}, completion_options = {})",""],["auto_complete_for","AutoComplete::ClassMethods","AutoComplete/ClassMethods.html#method-i-auto_complete_for","(object, method, options = {})",""],["auto_complete_for_barcode_key","HistologiesController","HistologiesController.html#method-i-auto_complete_for_barcode_key","()",""],["auto_complete_for_barcode_key","MolecularAssaysController","MolecularAssaysController.html#method-i-auto_complete_for_barcode_key","()",""],["auto_complete_for_barcode_key","SamplesController","SamplesController.html#method-i-auto_complete_for_barcode_key","()",""],["auto_complete_for_barcode_key","SeqLibsController","SeqLibsController.html#method-i-auto_complete_for_barcode_key","()",""],["auto_complete_for_method","ViewMapper::HasManyAutoCompleteView","ViewMapper/HasManyAutoCompleteView.html#method-i-auto_complete_for_method","(model_name, text_field)",""],["auto_complete_result","AutoCompleteMacrosHelper","AutoCompleteMacrosHelper.html#method-i-auto_complete_result","(entries, method, phrase = nil)","<p>Use this method in your view to generate a return for the AJAX autocomplete\nrequests.\n<p>Example action: …\n"],["autocomplete_flow_cells_sequencing_key","FlowCellsController","FlowCellsController.html#method-i-autocomplete_flow_cells_sequencing_key","()","<p>def auto_complete_for_sequencing_key\n"],["autocomplete_item_catalog_nr","ItemsController","ItemsController.html#method-i-autocomplete_item_catalog_nr","()",""],["autocomplete_item_company_name","ItemsController","ItemsController.html#method-i-autocomplete_item_company_name","()",""],["autocomplete_item_item_description","ItemsController","ItemsController.html#method-i-autocomplete_item_item_description","()",""],["autocomplete_molecular_assay_source_sample_name","MolecularAssaysController","MolecularAssaysController.html#method-i-autocomplete_molecular_assay_source_sample_name","()",""],["autocomplete_processed_sample_barcode_search","ProcessedSamplesController","ProcessedSamplesController.html#method-i-autocomplete_processed_sample_barcode_search","()","<p>def auto_complete_for_barcode_key\n"],["b","SslRequirementController","SslRequirementController.html#method-i-b","()",""],["banner","AuthenticatedGenerator","AuthenticatedGenerator.html#method-i-banner","()","<p>Override with your own usage banner.\n"],["barcode_incl_nccc","Sample","Sample.html#method-i-barcode_incl_nccc","()",""],["barcode_num","Sample","Sample.html#method-i-barcode_num","()",""],["barcode_search","ProcessedSample","ProcessedSample.html#method-c-barcode_search","(search_string)",""],["barcode_sort","Sample","Sample.html#method-i-barcode_sort","()",""],["barcode_type","ApplicationController","ApplicationController.html#method-i-barcode_type","(barcode_key)","<p>def base_barcode(barcode_key)\n\n<pre>barcode_split = barcode_key.split('.')\nreturn barcode_split[0]</pre>\n<p>end\n"],["basename_with_ext","AttachedFile","AttachedFile.html#method-i-basename_with_ext","()",""],["before_create","SampleCharacteristic","SampleCharacteristic.html#method-i-before_create","()","<p>after_save :save_sample\n"],["before_create","SampleStorageContainer","SampleStorageContainer.html#method-i-before_create","()",""],["before_save","SampleCharacteristic","SampleCharacteristic.html#method-i-before_save","()",""],["break_clear","ApplicationHelper","ApplicationHelper.html#method-i-break_clear","(content=nil)",""],["buffer_vol","MolecularAssaysHelper","MolecularAssaysHelper.html#method-i-buffer_vol","(molecular_assay)",""],["build_assay","MolecularAssaysController","MolecularAssaysController.html#method-i-build_assay","(assay_param, assay_defaults)",""],["build_flow_lanes","FlowCell","FlowCell.html#method-i-build_flow_lanes","(lanes)",""],["build_params_from_obj","LimsCommon","LimsCommon.html#method-i-build_params_from_obj","(obj, flds)","<p>build_params_from_obj:                                                     \n# Build parameter …\n"],["build_simplex_lib","SeqLibsController","SeqLibsController.html#method-i-build_simplex_lib","(lib_param, sample_param)",""],["c","SslRequirementController","SslRequirementController.html#method-i-c","()",""],["calc_pct_align","AlignQc","AlignQc.html#method-i-calc_pct_align","()",""],["call","ValidatesTimeliness::Validator","ValidatesTimeliness/Validator.html#method-i-call","(record, attr_name, value)",""],["category_filter","ApplicationController","ApplicationController.html#method-i-category_filter","(categories, cat_name, output='collection')",""],["check","HttpLoginProxy","HttpLoginProxy.html#method-i-check","()",""],["check","XmlLoginProxy","XmlLoginProxy.html#method-i-check","()",""],["check_barcodes","AssignedBarcodesController","AssignedBarcodesController.html#method-i-check_barcodes","()",""],["check_concentration","MolecularAssay","MolecularAssay.html#method-i-check_concentration","()",""],["check_for_existing_mrn","PatientsController","PatientsController.html#method-i-check_for_existing_mrn","(mrn)",""],["check_range","AssignedBarcode","AssignedBarcode.html#method-i-check_range","()",""],["check_roles","RoleRequirementSystem::RoleSecurityInstanceMethods","RoleRequirementSystem/RoleSecurityInstanceMethods.html#method-i-check_roles","()",""],["class_name","AutoCompleteFormBuilderHelper","AutoCompleteFormBuilderHelper.html#method-i-class_name","()",""],["clinical_sample","Sample","Sample.html#method-i-clinical_sample","()",""],["column","NoTable","NoTable.html#method-c-column","(name, sql_type = nil, default = nil, null = true)",""],["columns","NoTable","NoTable.html#method-c-columns","()",""],["compile_format_expressions","ValidatesTimeliness::Formats","ValidatesTimeliness/Formats.html#method-c-compile_format_expressions","()",""],["configure_validator","Object","Object.html#method-i-configure_validator","(options={})",""],["consent_descr","SampleCharacteristic","SampleCharacteristic.html#method-i-consent_descr","()",""],["container_and_position","ProcessedSample","ProcessedSample.html#method-i-container_and_position","()",""],["container_and_position","Sample","Sample.html#method-i-container_and_position","()",""],["container_and_position","SampleStorageContainer","SampleStorageContainer.html#method-i-container_and_position","()",""],["container_desc","SampleStorageContainer","SampleStorageContainer.html#method-i-container_desc","()",""],["container_type","Sample","Sample.html#method-i-container_type","()",""],["content_type","AuthenticatedTestHelper","AuthenticatedTestHelper.html#method-i-content_type","(type)",""],["control_lane?","SeqLib","SeqLib.html#method-i-control_lane-3F","()",""],["control_lane_nr","SeqLib","SeqLib.html#method-i-control_lane_nr","()",""],["count_overlapping_range","AssignedBarcode","AssignedBarcode.html#method-c-count_overlapping_range","(rstart, rend)",""],["count_samples_in_range","Sample","Sample.html#method-c-count_samples_in_range","(rstart, rend)",""],["create","AlignQcsController","AlignQcsController.html#method-i-create","()","<p>POST /align_qcs\n"],["create","AlignmentRefsController","AlignmentRefsController.html#method-i-create","()","<p>POST /alignment_refs\n"],["create","AssignedBarcodesController","AssignedBarcodesController.html#method-i-create","()","<p>POST /assigned_barcodes\n"],["create","AttachedFilesController","AttachedFilesController.html#method-i-create","()",""],["create","CategoriesController","CategoriesController.html#method-i-create","()","<p>POST /categories\n"],["create","ConsentProtocolsController","ConsentProtocolsController.html#method-i-create","()","<p>POST /consent_protocols\n"],["create","DissectedSamplesController","DissectedSamplesController.html#method-i-create","()","<p>POST /dissected_samples\n"],["create","FlowCellsController","FlowCellsController.html#method-i-create","()","<p>POST /flow_cells\n"],["create","FreezerLocationsController","FreezerLocationsController.html#method-i-create","()","<p>POST /freezer_locations\n"],["create","HistologiesController","HistologiesController.html#method-i-create","()",""],["create","ItemsController","ItemsController.html#method-i-create","()","<p>POST /items\n"],["create","MplexLibsController","MplexLibsController.html#method-i-create","()","<p>POST /mplex_libs\n"],["create","Object","Object.html#method-i-create","()","<p>POST /&lt;%= table_name %&gt;.xml\n"],["create","OrdersController","OrdersController.html#method-i-create","()","<p>POST /orders POST /orders.xml Navigate to create orders, from\nitems/list_unordered_items\n"],["create","PathologiesController","PathologiesController.html#method-i-create","()",""],["create","ProcessedSamplesController","ProcessedSamplesController.html#method-i-create","()","<p>POST /processed_samples\n"],["create","ProtocolsController","ProtocolsController.html#method-i-create","()","<p>POST /protocols\n"],["create","PublicationsController","PublicationsController.html#method-i-create","()",""],["create","ResearchersController","ResearchersController.html#method-i-create","()","<p>POST /researchers POST /researchers.xml\n"],["create","RunDirsController","RunDirsController.html#method-i-create","()",""],["create","SampleCharacteristicsController","SampleCharacteristicsController.html#method-i-create","()","<p>POST /sample_characteristics/1\n"],["create","SeqLibsController","SeqLibsController.html#method-i-create","()",""],["create","SeqMachinesController","SeqMachinesController.html#method-i-create","()","<p>POST /seq_machines\n"],["create","StorageDevicesController","StorageDevicesController.html#method-i-create","()",""],["create","TestiesController","TestiesController.html#method-i-create","()","<p>POST /testies POST /testies.xml\n"],["create","UploadsController","UploadsController.html#method-i-create","()",""],["create","UsersController","UsersController.html#method-i-create","()",""],["create_assays","MolecularAssaysController","MolecularAssaysController.html#method-i-create_assays","()",""],["create_reset_code","User","User.html#method-i-create_reset_code","()",""],["created_tagged_field","TaggedBuilder","TaggedBuilder.html#method-c-created_tagged_field","(method_name)",""],["current_","AuthenticatedSystem","AuthenticatedSystem.html#method-i-current_","(<%= file_name %> @current_<%= file_name %> ||= (session[:<%= file_name %>] && <%= class_name %>.find_by_id(session[:<%= file_name %>])) || :false end # Store the given <%= file_name %> in the session. def current_<%= file_name %>=(new_<%= file_name %>) session[:<%= file_name %>] = (new_<%= file_name %>.nil? || new_<%= file_name %>.is_a?(Symbol)) ? nil : new_<%= file_name %>.id @current_<%= file_name %> = new_<%= file_name %> end # Check if the <%= file_name %> is authorized. # # Override this method in your controllers if you want to restrict access # to only a few actions or if you want to check if the <%= file_name %> # has the correct rights. # # Example: # # # only allow nonbobs # def authorize? # current_<%= file_name %>.login != \"bob\" # end def authorized? true end # Filter method to enforce a login requirement. # # To require logins for all actions, use this in your controllers: # # before_filter :login_required # # To require logins for specific actions, use this in your controllers: # # before_filter :login_required, :only => [ :edit, :update ])","<p>Accesses the current &lt;%= file_name %&gt; from the session.\n"],["current_user","AuthenticatedSystem","AuthenticatedSystem.html#method-i-current_user","()","<p>Accesses the current user from the session.\n"],["current_user=","AuthenticatedSystem","AuthenticatedSystem.html#method-i-current_user-3D","(new_user)","<p>Store the given user in the session.\n"],["d","SslRequirementController","SslRequirementController.html#method-i-d","()",""],["datetime_selector_with_timeliness","ValidatesTimeliness::ActionView::InstanceTag","ValidatesTimeliness/ActionView/InstanceTag.html#method-i-datetime_selector_with_timeliness","(*args)",""],["default_id","AlignmentRef","AlignmentRef.html#method-c-default_id","()",""],["define_attribute_methods_with_timeliness","ValidatesTimeliness::ActiveRecord::AttributeMethods::ClassMethods","ValidatesTimeliness/ActiveRecord/AttributeMethods/ClassMethods.html#method-i-define_attribute_methods_with_timeliness","()",""],["define_conditions","FlowcellQueriesController","FlowcellQueriesController.html#method-i-define_conditions","(params)",""],["define_conditions","ItemsController","ItemsController.html#method-i-define_conditions","(params)",""],["define_conditions","MolassayQueriesController","MolassayQueriesController.html#method-i-define_conditions","(params)",""],["define_conditions","OrdersController","OrdersController.html#method-i-define_conditions","(params)",""],["define_conditions","PsampleQueriesController","PsampleQueriesController.html#method-i-define_conditions","(params)",""],["define_conditions","SampleQueriesController","SampleQueriesController.html#method-i-define_conditions","(params)",""],["define_conditions","SeqlibQueriesController","SeqlibQueriesController.html#method-i-define_conditions","(params)",""],["define_lib_conditions","FlowCellsController","FlowCellsController.html#method-i-define_lib_conditions","(params)",""],["define_lib_conditions","MplexLibsController","MplexLibsController.html#method-i-define_lib_conditions","(params)",""],["del_run_dir","RunDirsController","RunDirsController.html#method-i-del_run_dir","()",""],["delete_format","Object","Object.html#method-i-delete_format","(type, format)",""],["delete_reset_code","User","User.html#method-i-delete_reset_code","()",""],["derive_barcode","MolecularAssay","MolecularAssay.html#method-i-derive_barcode","()",""],["derive_barcode","ProcessedSample","ProcessedSample.html#method-i-derive_barcode","()",""],["derive_field_vals","RunDir","RunDir.html#method-i-derive_field_vals","()",""],["description","Spec::Rails::Matchers::ValidateTimeliness","Spec/Rails/Matchers/ValidateTimeliness.html#method-i-description","()",""],["destroy","AlignmentRefsController","AlignmentRefsController.html#method-i-destroy","()","<p>DELETE /alignment_refs/1\n"],["destroy","AssignedBarcodesController","AssignedBarcodesController.html#method-i-destroy","()","<p>DELETE /assigned_barcodes/1\n"],["destroy","AttachedFilesController","AttachedFilesController.html#method-i-destroy","()",""],["destroy","CategoriesController","CategoriesController.html#method-i-destroy","()","<p>DELETE /categories/1\n"],["destroy","ConsentProtocolsController","ConsentProtocolsController.html#method-i-destroy","()","<p>DELETE /consent_protocols/1\n"],["destroy","FlowCellsController","FlowCellsController.html#method-i-destroy","()","<p>DELETE /flow_cells/1\n"],["destroy","FreezerLocationsController","FreezerLocationsController.html#method-i-destroy","()","<p>DELETE /freezer_locations/1\n"],["destroy","HistologiesController","HistologiesController.html#method-i-destroy","()","<p>DELETE /patients/1\n"],["destroy","ItemsController","ItemsController.html#method-i-destroy","()","<p>DELETE /items/1\n"],["destroy","MolecularAssaysController","MolecularAssaysController.html#method-i-destroy","()","<p>DELETE /molecular_assays/1\n"],["destroy","MplexLibsController","MplexLibsController.html#method-i-destroy","()","<p>DELETE /mplex_libs/1\n"],["destroy","OrdersController","OrdersController.html#method-i-destroy","()","<p>DELETE /orders/1 DELETE /orders/1.xml\n"],["destroy","PathologiesController","PathologiesController.html#method-i-destroy","()",""],["destroy","PatientsController","PatientsController.html#method-i-destroy","()","<p>DELETE /patients/1\n"],["destroy","ProcessedSamplesController","ProcessedSamplesController.html#method-i-destroy","()","<p>DELETE /processed_samples/1\n"],["destroy","ProtocolsController","ProtocolsController.html#method-i-destroy","()","<p>DELETE /protocols/1\n"],["destroy","PublicationsController","PublicationsController.html#method-i-destroy","()","<p>DELETE /publications/1\n"],["destroy","ResearchersController","ResearchersController.html#method-i-destroy","()","<p>DELETE /researchers/1 DELETE /researchers/1.xml\n"],["destroy","RunDirsController","RunDirsController.html#method-i-destroy","()",""],["destroy","SampleCharacteristicsController","SampleCharacteristicsController.html#method-i-destroy","()","<p>DELETE /patients/1\n"],["destroy","SamplesController","SamplesController.html#method-i-destroy","()","<p>DELETE /samples/1\n"],["destroy","SeqLibsController","SeqLibsController.html#method-i-destroy","()","<p>DELETE /seq_libs/1\n"],["destroy","SeqMachinesController","SeqMachinesController.html#method-i-destroy","()","<p>DELETE /seq_machines/1\n"],["destroy","StorageDevicesController","StorageDevicesController.html#method-i-destroy","()",""],["destroy","TestiesController","TestiesController.html#method-i-destroy","()","<p>DELETE /testies/1 DELETE /testies/1.xml\n"],["destroy","UploadsController","UploadsController.html#method-i-destroy","()","<p>DELETE /uploads/1\n"],["destroy","UsersController","UsersController.html#method-i-destroy","()","<p>DELETE /users/1\n"],["display_msg","UploadsController","UploadsController.html#method-i-display_msg","(rc, filename, filetype, plates_created)",""],["do_annotations","AnnotateModels","AnnotateModels.html#method-c-do_annotations","()","<p>We’re passed a name of things that might be  ActiveRecord models. If we can\nfind the class, and if its …\n"],["doc_fullpath","AttachedFile","AttachedFile.html#method-i-doc_fullpath","()",""],["down","CreateParents","CreateParents.html#method-c-down","()",""],["dropdowns","AlignQcsController","AlignQcsController.html#method-i-dropdowns","()",""],["dropdowns","DissectedSamplesController","DissectedSamplesController.html#method-i-dropdowns","()",""],["dropdowns","FlowCellsController","FlowCellsController.html#method-i-dropdowns","()",""],["dropdowns","FlowcellQueriesController","FlowcellQueriesController.html#method-i-dropdowns","()",""],["dropdowns","HistologiesController","HistologiesController.html#method-i-dropdowns","()","<p>Protected and private methods ##\n"],["dropdowns","ItemsController","ItemsController.html#method-i-dropdowns","()",""],["dropdowns","MolassayQueriesController","MolassayQueriesController.html#method-i-dropdowns","()",""],["dropdowns","MolecularAssaysController","MolecularAssaysController.html#method-i-dropdowns","()",""],["dropdowns","MplexLibsController","MplexLibsController.html#method-i-dropdowns","()",""],["dropdowns","PathologiesController","PathologiesController.html#method-i-dropdowns","()","<p>Protected and private methods ##\n"],["dropdowns","PatientsController","PatientsController.html#method-i-dropdowns","()",""],["dropdowns","ProcessedSamplesController","ProcessedSamplesController.html#method-i-dropdowns","()",""],["dropdowns","PsampleQueriesController","PsampleQueriesController.html#method-i-dropdowns","()",""],["dropdowns","PublicationsController","PublicationsController.html#method-i-dropdowns","()",""],["dropdowns","ResearchersController","ResearchersController.html#method-i-dropdowns","()",""],["dropdowns","RunDirsController","RunDirsController.html#method-i-dropdowns","()",""],["dropdowns","SampleCharacteristicsController","SampleCharacteristicsController.html#method-i-dropdowns","()","<p>Protected and private methods ##\n"],["dropdowns","SampleQueriesController","SampleQueriesController.html#method-i-dropdowns","()",""],["dropdowns","SampleStorageContainersController","SampleStorageContainersController.html#method-i-dropdowns","()",""],["dropdowns","SamplesController","SamplesController.html#method-i-dropdowns","()",""],["dropdowns","SeqLibsController","SeqLibsController.html#method-i-dropdowns","()",""],["dropdowns","SeqlibQueriesController","SeqlibQueriesController.html#method-i-dropdowns","()",""],["dummy_barcode","SeqLib","SeqLib.html#method-i-dummy_barcode","()",""],["edit","AlignQcsController","AlignQcsController.html#method-i-edit","()",""],["edit","AlignmentRefsController","AlignmentRefsController.html#method-i-edit","()","<p>GET /alignment_refs/1/edit\n"],["edit","AssignedBarcodesController","AssignedBarcodesController.html#method-i-edit","()","<p>GET /assigned_barcodes/1/edit\n"],["edit","CategoriesController","CategoriesController.html#method-i-edit","()","<p>GET /categories/1/edit\n"],["edit","ConsentProtocolsController","ConsentProtocolsController.html#method-i-edit","()","<p>GET /consent_protocols/1/edit\n"],["edit","DissectedSamplesController","DissectedSamplesController.html#method-i-edit","()",""],["edit","FlowCellsController","FlowCellsController.html#method-i-edit","()","<p>GET /flow_cells/1/edit\n"],["edit","FreezerLocationsController","FreezerLocationsController.html#method-i-edit","()","<p>GET /freezer_locations/1/edit\n"],["edit","HistologiesController","HistologiesController.html#method-i-edit","()",""],["edit","ItemsController","ItemsController.html#method-i-edit","()","<p>GET /items/1/edit\n"],["edit","MolecularAssaysController","MolecularAssaysController.html#method-i-edit","()","<p>GET /molecular_assays/1/edit\n"],["edit","MplexLibsController","MplexLibsController.html#method-i-edit","()","<p>GET /mplex_libs/1/edit\n"],["edit","Object","Object.html#method-i-edit","()",""],["edit","OrdersController","OrdersController.html#method-i-edit","()","<p>GET /orders/1/edit\n"],["edit","PathologiesController","PathologiesController.html#method-i-edit","()",""],["edit","PatientsController","PatientsController.html#method-i-edit","()","<p>GET /patients/1/edit\n"],["edit","ProcessedSamplesController","ProcessedSamplesController.html#method-i-edit","()","<p>GET /processed_samples/1/edit\n"],["edit","ProtocolsController","ProtocolsController.html#method-i-edit","()","<p>GET /protocols/1/edit\n"],["edit","PublicationsController","PublicationsController.html#method-i-edit","()","<p>render edit.html\n"],["edit","ResearchersController","ResearchersController.html#method-i-edit","()","<p>GET /researchers/1/edit\n"],["edit","RunDirsController","RunDirsController.html#method-i-edit","()",""],["edit","SampleCharacteristicsController","SampleCharacteristicsController.html#method-i-edit","()","<p>GET /sample_characteristics/1/edit\n"],["edit","SamplesController","SamplesController.html#method-i-edit","()","<p>GET /samples/1/edit\n"],["edit","SeqLibsController","SeqLibsController.html#method-i-edit","()","<p>GET /seq_libs/1/edit\n"],["edit","SeqMachinesController","SeqMachinesController.html#method-i-edit","()","<p>GET /seq_machines/1/edit\n"],["edit","StorageDevicesController","StorageDevicesController.html#method-i-edit","()",""],["edit","TestiesController","TestiesController.html#method-i-edit","()","<p>GET /testies/1/edit\n"],["edit","UsersController","UsersController.html#method-i-edit","()","<p>render edit.html\n"],["edit_by_barcode","HistologiesController","HistologiesController.html#method-i-edit_by_barcode","()",""],["edit_by_barcode","ProcessedSamplesController","ProcessedSamplesController.html#method-i-edit_by_barcode","()",""],["edit_by_barcode","SamplesController","SamplesController.html#method-i-edit_by_barcode","()",""],["edit_order_items","OrdersController","OrdersController.html#method-i-edit_order_items","()",""],["edit_params","PatientsController","PatientsController.html#method-i-edit_params","()",""],["edit_params","SampleCharacteristicsController","SampleCharacteristicsController.html#method-i-edit_params","()",""],["edit_params","SamplesController","SamplesController.html#method-i-edit_params","()",""],["email_list","LimsMailer","LimsMailer.html#method-i-email_list","(emails)",""],["email_list","OrderMailer","OrderMailer.html#method-i-email_list","(deliver_site)",""],["email_value","ApplicationController","ApplicationController.html#method-i-email_value","(email_hash, email_type, deliver_site)",""],["email_value","OrderMailer","OrderMailer.html#method-i-email_value","(email_hash, email_type, deliver_site)",""],["enable_active_record_datetime_parser!","ValidatesTimeliness","ValidatesTimeliness.html#method-c-enable_active_record_datetime_parser-21","()",""],["enable_datetime_select_extension!","ValidatesTimeliness","ValidatesTimeliness.html#method-c-enable_datetime_select_extension-21","()",""],["enable_datetime_select_invalid_value_extension!","ValidatesTimeliness","ValidatesTimeliness.html#method-c-enable_datetime_select_invalid_value_extension-21","()",""],["enable_multiparameter_attributes_extension!","ValidatesTimeliness","ValidatesTimeliness.html#method-c-enable_multiparameter_attributes_extension-21","()",""],["encode","Object","Object.html#method-i-encode","(subject)",""],["encrypt","Object","Object.html#method-i-encrypt","(password)","<p>Encrypts the password with the user salt\n"],["encrypt","Object","Object.html#method-c-encrypt","(password, salt)","<p>Encrypts some data with the salt.\n"],["encrypt","User","User.html#method-i-encrypt","(password)","<p>Encrypts the password with the user salt\n"],["encrypt","User","User.html#method-c-encrypt","(password, salt)","<p>Encrypts some data with the salt.\n"],["encrypt_password","Object","Object.html#method-i-encrypt_password","()","<p>before filter\n"],["encrypt_password","User","User.html#method-i-encrypt_password","()","<p>before filter\n"],["enter_or_upd_by","Order","Order.html#method-i-enter_or_upd_by","()",""],["error_messages","Object","Object.html#method-i-error_messages","()",""],["error_messages","ValidatesTimeliness::Validator","ValidatesTimeliness/Validator.html#method-i-error_messages","()",""],["evaluate_option_value","Object","Object.html#method-i-evaluate_option_value","(restriction, type)",""],["exclude_adapters","SeqLibsHelper","SeqLibsHelper.html#method-i-exclude_adapters","(adapters, plex_char)",""],["execute_callstack_for_multiparameter_attributes_with_timeliness","ValidatesTimeliness::ActiveRecord::MultiparameterAttributes","ValidatesTimeliness/ActiveRecord/MultiparameterAttributes.html#method-i-execute_callstack_for_multiparameter_attributes_with_timeliness","(callstack)","<p>Assign dates and times as formatted strings to force the use of the plugin\nparser\n"],["existing_item_attributes=","Order","Order.html#method-i-existing_item_attributes-3D","(item_attributes)",""],["existing_lane_attributes=","FlowCell","FlowCell.html#method-i-existing_lane_attributes-3D","(lane_attributes)","<p>def new_lane_attributes=(lane_attributes)\n\n<pre># Remove blank lines (ie sequencing libraries which were not ...</pre>\n"],["expect_no_actions","Object","Object.html#method-i-expect_no_actions","()",""],["expect_no_warnings","Object","Object.html#method-i-expect_no_warnings","()",""],["export_libqc","SeqlibLanesController","SeqlibLanesController.html#method-i-export_libqc","()",""],["export_libqc_csv","SeqlibLanesController","SeqlibLanesController.html#method-i-export_libqc_csv","(seq_lib)",""],["export_libqc_setup","SeqlibLanesController","SeqlibLanesController.html#method-i-export_libqc_setup","()",""],["export_samples","PsampleQueriesController","PsampleQueriesController.html#method-i-export_samples","()",""],["export_samples","SampleQueriesController","SampleQueriesController.html#method-i-export_samples","()",""],["export_samples_csv","PsampleQueriesController","PsampleQueriesController.html#method-i-export_samples_csv","(processed_samples)","<p>def conditions_for_barcode(barcode_key)\n\n<pre>rc_pattern = mask_barcode(params[:barcode_key])\nif rc_pattern[0] ...</pre>\n"],["export_samples_csv","SampleQueriesController","SampleQueriesController.html#method-i-export_samples_csv","(samples, with_mrn='no')",""],["export_samples_setup","PsampleQueriesController","PsampleQueriesController.html#method-i-export_samples_setup","()",""],["export_samples_setup","SampleQueriesController","SampleQueriesController.html#method-i-export_samples_setup","(with_mrn='no')",""],["extended","ViewMapper::HasManyAutoCompleteView","ViewMapper/HasManyAutoCompleteView.html#method-c-extended","(base)",""],["extension_white_list","AttachmentUploader","AttachmentUploader.html#method-i-extension_white_list","()","<p>Add a white list of extensions which are allowed to be uploaded. For images\nyou might use something like …\n"],["extr_type_char","ProcessedSample","ProcessedSample.html#method-i-extr_type_char","()",""],["extract_date_from_multiparameter_attributes","ValidatesTimeliness::ActiveRecord","ValidatesTimeliness/ActiveRecord.html#method-c-extract_date_from_multiparameter_attributes","(values)",""],["extract_time_from_multiparameter_attributes","ValidatesTimeliness::ActiveRecord","ValidatesTimeliness/ActiveRecord.html#method-c-extract_time_from_multiparameter_attributes","(values)",""],["failure_message","Spec::Rails::Matchers::ValidateTimeliness","Spec/Rails/Matchers/ValidateTimeliness.html#method-i-failure_message","()",""],["final_amt_ug","ProcessedSample","ProcessedSample.html#method-i-final_amt_ug","()",""],["find_all_by_date","Item","Item.html#method-c-find_all_by_date","(condition_array=[])",""],["find_all_incl_sample","ProcessedSample","ProcessedSample.html#method-c-find_all_incl_sample","(condition_array=[])",""],["find_all_source_for_dissected","Sample","Sample.html#method-c-find_all_source_for_dissected","()",""],["find_all_unique","Item","Item.html#method-c-find_all_unique","(condition_array=[])",""],["find_all_unordered","Item","Item.html#method-c-find_all_unordered","()",""],["find_all_with_authorization","User","User.html#method-c-find_all_with_authorization","(user=current_user)","<p>Returns only users which current role is authorized to see All users may\nsee their own record; Clin_admin …\n"],["find_all_with_incidents","SeqMachine","SeqMachine.html#method-c-find_all_with_incidents","()",""],["find_and_group_by_active_inactive","Researcher","Researcher.html#method-c-find_and_group_by_active_inactive","()",""],["find_and_group_by_source","Sample","Sample.html#method-c-find_and_group_by_source","(condition_array)",""],["find_and_group_for_clinical","Sample","Sample.html#method-c-find_and_group_for_clinical","(sample_characteristic_id)",""],["find_and_group_for_patient","Sample","Sample.html#method-c-find_and_group_for_patient","(patient_id, id_type=nil)",""],["find_and_group_for_sample","Sample","Sample.html#method-c-find_and_group_for_sample","(source_sample_id)",""],["find_and_group_with_conditions","SampleCharacteristic","SampleCharacteristic.html#method-c-find_and_group_with_conditions","(condition_array=[])",""],["find_and_incr_run_nr","SeqMachine","SeqMachine.html#method-c-find_and_incr_run_nr","()",""],["find_and_sort_all","AlignmentRef","AlignmentRef.html#method-c-find_and_sort_all","()",""],["find_and_sort_all","ConsentProtocol","ConsentProtocol.html#method-c-find_and_sort_all","()",""],["find_and_sortby_cgroup","Category","Category.html#method-c-find_and_sortby_cgroup","()",""],["find_auto_complete_attributes","ViewMapper::HasManyAutoCompleteView","ViewMapper/HasManyAutoCompleteView.html#method-i-find_auto_complete_attributes","()",""],["find_barcode","ApplicationController","ApplicationController.html#method-i-find_barcode","(model, id)",""],["find_flow_cell_using_params","RunDirsController","RunDirsController.html#method-i-find_flow_cell_using_params","(params)",""],["find_flowcell_incl_rundirs","FlowCell","FlowCell.html#method-c-find_flowcell_incl_rundirs","(condition_array=[])",""],["find_flowcells_for_sequencing","FlowCell","FlowCell.html#method-c-find_flowcells_for_sequencing","()",""],["find_for_export","ProcessedSample","ProcessedSample.html#method-c-find_for_export","(psample_ids)",""],["find_for_export","Sample","Sample.html#method-c-find_for_export","(sample_ids)",""],["find_for_export","SeqLib","SeqLib.html#method-c-find_for_export","(id)",""],["find_for_protocol_type","Protocol","Protocol.html#method-c-find_for_protocol_type","(protocol_type)",""],["find_for_query","MolecularAssay","MolecularAssay.html#method-c-find_for_query","(condition_array=[])",""],["find_for_query","ProcessedSample","ProcessedSample.html#method-c-find_for_query","(condition_array=[])",""],["find_for_query","SeqLib","SeqLib.html#method-c-find_for_query","(condition_array)",""],["find_id_from_mrn","Patient","Patient.html#method-c-find_id_from_mrn","(mrn)",""],["find_id_using_mrn","Patient","Patient.html#method-c-find_id_using_mrn","(mrn)","<p>NEED TO make this protected or private?  If so, cannot call any of these\nmethods from  sample_characteristics …\n"],["find_newly_added_sample","Sample","Sample.html#method-c-find_newly_added_sample","(sample_characteristic_id, barcode_key)",""],["find_one_incl_patient","ProcessedSample","ProcessedSample.html#method-c-find_one_incl_patient","(condition_array=[])",""],["find_or_blank","IndexTag","IndexTag.html#method-c-find_or_blank","(runtype, tag_nr)",""],["find_patient_nr","ApplicationController","ApplicationController.html#method-i-find_patient_nr","(model, id)",""],["find_sample","Sample","Sample.html#method-c-find_sample","(sample_id)",""],["find_sequencing_runs","FlowCell","FlowCell.html#method-c-find_sequencing_runs","(condition_array=[])",""],["find_with_conditions","Sample","Sample.html#method-c-find_with_conditions","(condition_array)",""],["find_with_incidents","SeqMachine","SeqMachine.html#method-c-find_with_incidents","(id)",""],["find_with_samples","SampleCharacteristic","SampleCharacteristic.html#method-c-find_with_samples","(patient_id=nil)",""],["flowcell_qc","FlowCell","FlowCell.html#method-i-flowcell_qc","()",""],["for_publication?","FlowCell","FlowCell.html#method-i-for_publication-3F","()",""],["for_publication?","FlowLane","FlowLane.html#method-i-for_publication-3F","()",""],["forget_me","Object","Object.html#method-i-forget_me","()",""],["forget_me","User","User.html#method-i-forget_me","()",""],["forgot","UsersController","UsersController.html#method-i-forgot","()",""],["format_conc","ApplicationHelper","ApplicationHelper.html#method-i-format_conc","(conc, val_if_nil='--')",""],["format_date","ApplicationHelper","ApplicationHelper.html#method-i-format_date","(datetime)",""],["format_datetime","ApplicationHelper","ApplicationHelper.html#method-i-format_datetime","(datetime)",""],["format_patient_nr","ApplicationController","ApplicationController.html#method-i-format_patient_nr","(id, format='string')","<p>If current_user can read MRN, format patient nr as id/mrn, otherwise just\nid\n"],["format_seq_key","FlowCellsController","FlowCellsController.html#method-i-format_seq_key","(seq_date, machine_name, run_nr)",""],["formats","Object","Object.html#method-i-formats","()",""],["free_contigs","AssignedBarcodesController","AssignedBarcodesController.html#method-i-free_contigs","(assigned_contigs)",""],["from_nccc?","SampleCharacteristic","SampleCharacteristic.html#method-i-from_nccc-3F","()",""],["full_hour","ValidatesTimeliness::Formats","ValidatesTimeliness/Formats.html#method-c-full_hour","(hour, meridian)",""],["generate_proc","Object","Object.html#method-i-generate_proc","(format)",""],["generate_regexp","Object","Object.html#method-i-generate_regexp","(format)",""],["generate_regexp_str","Object","Object.html#method-i-generate_regexp_str","(format)",""],["generator_cmd_line","Object","Object.html#method-i-generator_cmd_line","(gen, args, model)",""],["generator_script_cmd_line","Object","Object.html#method-i-generator_script_cmd_line","(gen, args, model = 'testy')",""],["get_align_key","AlignmentRef","AlignmentRef.html#method-c-get_align_key","(id=nil)",""],["get_auth_data","AuthenticatedSystem","AuthenticatedSystem.html#method-i-get_auth_data","()","<p>gets BASIC auth info\n"],["get_model_names","AnnotateModels","AnnotateModels.html#method-c-get_model_names","()","<p>Return a list of the model files to annotate. If we have  command line\narguments, they’re assumed to …\n"],["get_obj_with_id","AttachedFilesController","AttachedFilesController.html#method-i-get_obj_with_id","(rec_type, obj_id)",""],["get_obj_with_key","AttachedFilesController","AttachedFilesController.html#method-i-get_obj_with_key","(rec_type, rec_key)",""],["get_params","AttachedFilesController","AttachedFilesController.html#method-i-get_params","()",""],["get_params","RunDirsController","RunDirsController.html#method-i-get_params","()",""],["get_patient_id","Patient","Patient.html#method-c-get_patient_id","(mrn, not_found_action='none')",""],["get_pool_label","Pool","Pool.html#method-c-get_pool_label","(id=nil)",""],["get_pool_name","Pool","Pool.html#method-c-get_pool_name","(id=nil)",""],["get_schema_info","AnnotateModels","AnnotateModels.html#method-c-get_schema_info","(klass, header)","<p>Use the column information in an ActiveRecord class to create a comment\nblock containing a line for each …\n"],["getwith_attach","FlowCell","FlowCell.html#method-c-getwith_attach","(id)",""],["getwith_attach","Histology","Histology.html#method-c-getwith_attach","(id)",""],["getwith_attach","MolecularAssay","MolecularAssay.html#method-c-getwith_attach","(id)",""],["getwith_attach","Pathology","Pathology.html#method-c-getwith_attach","(id)",""],["getwith_attach","ProcessedSample","ProcessedSample.html#method-c-getwith_attach","(id)",""],["getwith_attach","Sample","Sample.html#method-c-getwith_attach","(id)",""],["getwith_attach","SeqLib","SeqLib.html#method-c-getwith_attach","(id)",""],["has_role?","User","User.html#method-i-has_role-3F","(role_in_question, admin='admin_defaults_to_true')","<p>has_role? simply needs to return true or false whether a user has a role or\nnot.\n<p>It may be a good idea …\n"],["have_comments?","SampleQueriesHelper","SampleQueriesHelper.html#method-i-have_comments-3F","(sample)",""],["help","UploadsController","UploadsController.html#method-i-help","()",""],["hipaa_data","Patient","Patient.html#method-i-hipaa_data","()",""],["hipaa_data=","Patient","Patient.html#method-i-hipaa_data-3D","(hipaa_data)",""],["hiseq_qc?","FlowCell","FlowCell.html#method-i-hiseq_qc-3F","()",""],["hiseq_run?","FlowCell","FlowCell.html#method-i-hiseq_run-3F","()",""],["human_attribute_name","Pool","Pool.html#method-c-human_attribute_name","(attribute_name)",""],["id_name","FlowCell","FlowCell.html#method-i-id_name","()",""],["in_multiplex_lib?","SeqLib","SeqLib.html#method-i-in_multiplex_lib-3F","()",""],["included","AuthenticatedSystem","AuthenticatedSystem.html#method-c-included","(base)","<p>Inclusion hook to make #current_&lt;%= file_name %&gt; and #logged_in?\navailable as ActionView helper …\n"],["included","AutoComplete","AutoComplete.html#method-c-included","(base)",""],["included","Blame::Userstamp","Blame/Userstamp.html#method-c-included","(base)",""],["included","RoleRequirementSystem","RoleRequirementSystem.html#method-c-included","(klass)",""],["included","RoleRequirementSystem::RoleSecurityInstanceMethods","RoleRequirementSystem/RoleSecurityInstanceMethods.html#method-c-included","(klass)",""],["included","SslRequirement","SslRequirement.html#method-c-included","(controller)",""],["included","TimeTravel::TimeExtensions","TimeTravel/TimeExtensions.html#method-c-included","(base)",""],["included","ValidatesTimeliness::ActionView::InstanceTag","ValidatesTimeliness/ActionView/InstanceTag.html#method-c-included","(base)",""],["included","ValidatesTimeliness::ActiveRecord::AttributeMethods","ValidatesTimeliness/ActiveRecord/AttributeMethods.html#method-c-included","(base)",""],["included","ValidatesTimeliness::ActiveRecord::MultiparameterAttributes","ValidatesTimeliness/ActiveRecord/MultiparameterAttributes.html#method-c-included","(base)",""],["included","ValidatesTimeliness::ValidationMethods","ValidatesTimeliness/ValidationMethods.html#method-c-included","(base)",""],["includes_chemical?","Item","Item.html#method-c-includes_chemical-3F","(id_list)",""],["index","AlignmentRefsController","AlignmentRefsController.html#method-i-index","()","<p>GET /alignment_refs\n"],["index","AssignedBarcodesController","AssignedBarcodesController.html#method-i-index","()","<p>GET /assigned_barcodes\n"],["index","CategoriesController","CategoriesController.html#method-i-index","()","<p>GET /categories\n"],["index","ConsentProtocolsController","ConsentProtocolsController.html#method-i-index","()","<p>GET /consent_protocols\n"],["index","FlowCellsController","FlowCellsController.html#method-i-index","()","<p>GET /flow_cells\n"],["index","FlowcellQueriesController","FlowcellQueriesController.html#method-i-index","()",""],["index","FreezerLocationsController","FreezerLocationsController.html#method-i-index","()","<p>GET /freezer_locations\n"],["index","HistologiesController","HistologiesController.html#method-i-index","()",""],["index","IndexTagsController","IndexTagsController.html#method-i-index","()",""],["index","ItemsController","ItemsController.html#method-i-index","()","<p>GET /items\n"],["index","MolassayQueriesController","MolassayQueriesController.html#method-i-index","()",""],["index","MolecularAssaysController","MolecularAssaysController.html#method-i-index","()","<p>GET /molecular_assays\n"],["index","OligoPoolsController","OligoPoolsController.html#method-i-index","()","<p>GET /oligo_pools\n"],["index","OrdersController","OrdersController.html#method-i-index","()","<p>GET /orders GET /orders.xml\n"],["index","PathologiesController","PathologiesController.html#method-i-index","()",""],["index","PatientsController","PatientsController.html#method-i-index","()","<p>GET /patients\n"],["index","ProcessedSamplesController","ProcessedSamplesController.html#method-i-index","()","<p>GET /processed_samples\n"],["index","ProtocolsController","ProtocolsController.html#method-i-index","()","<p>GET /protocols\n"],["index","PsampleQueriesController","PsampleQueriesController.html#method-i-index","()",""],["index","PublicationsController","PublicationsController.html#method-i-index","()","<p>render index.rhtml\n"],["index","ResearchersController","ResearchersController.html#method-i-index","()","<p>GET /researchers GET /researchers.xml\n"],["index","RunDirsController","RunDirsController.html#method-i-index","()",""],["index","SampleQueriesController","SampleQueriesController.html#method-i-index","()",""],["index","SampleStorageContainersController","SampleStorageContainersController.html#method-i-index","()",""],["index","SeqLibsController","SeqLibsController.html#method-i-index","()","<p>GET /seq_libs\n"],["index","SeqMachinesController","SeqMachinesController.html#method-i-index","()","<p>GET /seq_machines\n"],["index","SeqlibQueriesController","SeqlibQueriesController.html#method-i-index","()","<p>GET /seq_libs\n"],["index","StorageDevicesController","StorageDevicesController.html#method-i-index","()",""],["index","TestiesController","TestiesController.html#method-i-index","()","<p>GET /testies GET /testies.xml\n"],["index","UploadsController","UploadsController.html#method-i-index","()","<p>GET /uploads\n"],["index","UsersController","UsersController.html#method-i-index","()","<p>render index.rhtml\n"],["index","WelcomeController","WelcomeController.html#method-i-index","()",""],["initial_amt_ug","ProcessedSample","ProcessedSample.html#method-i-initial_amt_ug","()",""],["is_auto_complete_attribute?","Object","Object.html#method-i-is_auto_complete_attribute-3F","(model_name, text_field)",""],["is_auto_complete_attribute?","ViewMapper::HasManyAutoCompleteView","ViewMapper/HasManyAutoCompleteView.html#method-i-is_auto_complete_attribute-3F","(model_name, text_field)",""],["is_used_as_nested_attribute?","AutoCompleteFormBuilderHelper","AutoCompleteFormBuilderHelper.html#method-i-is_used_as_nested_attribute-3F","()",""],["item_ext_price","Item","Item.html#method-i-item_ext_price","()",""],["lib_barcode","SeqLib","SeqLib.html#method-i-lib_barcode","()",""],["link_to_add_fields","ApplicationHelper","ApplicationHelper.html#method-i-link_to_add_fields","(name, f, association)",""],["link_to_remove_fields","ApplicationHelper","ApplicationHelper.html#method-i-link_to_remove_fields","(name, f)",""],["list_added","MolecularAssaysController","MolecularAssaysController.html#method-i-list_added","()",""],["list_all_by_room","FreezerLocation","FreezerLocation.html#method-c-list_all_by_room","()",""],["list_companies_from_items","ItemsController","ItemsController.html#method-i-list_companies_from_items","(items)",""],["list_samples_for_characteristic","SampleQueriesController","SampleQueriesController.html#method-i-list_samples_for_characteristic","()",""],["list_samples_for_patient","SampleQueriesController","SampleQueriesController.html#method-i-list_samples_for_patient","()",""],["list_selected","ItemsController","ItemsController.html#method-i-list_selected","()",""],["list_selected","OrdersController","OrdersController.html#method-i-list_selected","()",""],["list_unordered_items","ItemsController","ItemsController.html#method-i-list_unordered_items","()",""],["load_error_messages","ValidatesTimeliness","ValidatesTimeliness.html#method-c-load_error_messages","()",""],["loadrecs","Patient","Patient.html#method-c-loadrecs","(file_path)","<p>def self.upd_demographics(id, gender, race, ethnicity)\n\n<pre>attr_hash = {}\npatient = self.find(id)\nattr_hash[:gender] ...</pre>\n"],["loadtodb","PatientsController","PatientsController.html#method-i-loadtodb","()",""],["loadtodb","UploadsController","UploadsController.html#method-i-loadtodb","()",""],["log_entry","WelcomeController","WelcomeController.html#method-i-log_entry","(user_action)",""],["log_user_action","ApplicationController","ApplicationController.html#method-i-log_user_action","()",""],["logged_in?","AuthenticatedSystem","AuthenticatedSystem.html#method-i-logged_in-3F","()","<p>Returns true or false if the user is logged in. Preloads @current_&lt;%=\nfile_name %&gt; with the user …\n"],["login_as","AuthenticatedTestHelper","AuthenticatedTestHelper.html#method-i-login_as","(<%= file_name %>) @request.session[:<%= file_name %>] = <%= file_name %> ? <%= table_name %>(<%= file_name %>).id : nil end def content_type(type) @request.env['Content-Type'] = type end def accept(accept) @request.env[\"HTTP_ACCEPT\"] = accept end def authorize_as(user) if user @request.env[\"HTTP_AUTHORIZATION\"] = \"Basic #{Base64.encode64(\"#{users(user).login}:test\")}\" accept 'application/xml' content_type 'application/xml' else @request.env[\"HTTP_AUTHORIZATION\"] = nil accept nil content_type nil end end def assert_difference(object, method = nil, difference = 1) initial_value = object.send(method) yield assert_equal initial_value + difference, object.send(method), \"#{object}##{method}\" end def assert_no_difference(object, method, &block) assert_difference object, method, 0, &block end def assert_requires_login(login = nil) yield HttpLoginProxy.new(self, login) end def assert_http_authentication_required(login = nil) yield XmlLoginProxy.new(self, login) end def reset!(*instance_vars) instance_vars = [:controller, :request, :response] unless instance_vars.any? instance_vars.collect! { |v| \"@#{v}\".to_sym } instance_vars.each do |var| instance_variable_set(var, instance_variable_get(var).class.new) end end end class BaseLoginProxy attr_reader :controller attr_reader :options def initialize(controller, login) @controller = controller @login = login end private def authenticated raise NotImplementedError end def check raise NotImplementedError end def method_missing(method, *args) @controller.reset! authenticate @controller.send(method, *args) check end end class HttpLoginProxy < BaseLoginProxy protected def authenticate @controller.login_as @login if @login end def check @controller.assert_redirected_to :controller => 'account', :action => 'login' end end class XmlLoginProxy < BaseLoginProxy protected def authenticate @controller.accept 'application/xml' @controller.authorize_as @login if @login end def check @controller.assert_response 401 end end","<p>Sets the current &lt;%= file_name %&gt; in the session from the &lt;%=\nfile_name %&gt; fixtures.\n"],["login_from_cookie","AuthenticatedSystem","AuthenticatedSystem.html#method-i-login_from_cookie","()","<p>When called with before_filter :login_from_cookie will check for an\n:auth_token cookie and log the user …\n"],["login_required","AuthenticatedSystem","AuthenticatedSystem.html#method-i-login_required","()","<p>To skip this in a subclassed controller:\n\n<pre>skip_before_filter :login_required</pre>\n"],["logout","WelcomeController","WelcomeController.html#method-i-logout","()",""],["machine_name_and_type","SeqMachine","SeqMachine.html#method-i-machine_name_and_type","()",""],["make_time","ValidatesTimeliness::Parser","ValidatesTimeliness/Parser.html#method-c-make_time","(time_array)",""],["manifest","AuthenticatedGenerator","AuthenticatedGenerator.html#method-i-manifest","()",""],["manifest","AuthenticatedMailerGenerator","AuthenticatedMailerGenerator.html#method-i-manifest","()",""],["manifest","ViewMapper::HasManyAutoCompleteView","ViewMapper/HasManyAutoCompleteView.html#method-i-manifest","()",""],["matches?","Spec::Rails::Matchers::ValidateTimeliness","Spec/Rails/Matchers/ValidateTimeliness.html#method-i-matches-3F","(record)",""],["microseconds","ValidatesTimeliness::Formats","ValidatesTimeliness/Formats.html#method-c-microseconds","(usec)",""],["model_xref","PsampleQueriesController","PsampleQueriesController.html#method-i-model_xref","(psample)",""],["model_xref","SampleQueriesController","SampleQueriesController.html#method-i-model_xref","(xsample, psample=nil)",""],["molecule_type","Protocol","Protocol.html#method-i-molecule_type","()",""],["month_index","ValidatesTimeliness::Formats","ValidatesTimeliness/Formats.html#method-c-month_index","(month)",""],["month_names","ValidatesTimeliness::Formats","ValidatesTimeliness/Formats.html#method-c-month_names","()",""],["mplex_adapters","IndexTag","IndexTag.html#method-c-mplex_adapters","()",""],["mrn","Patient","Patient.html#method-i-mrn","()",""],["mrn=","Patient","Patient.html#method-i-mrn-3D","(mrn)",""],["multiplex_lib?","SeqLib","SeqLib.html#method-i-multiplex_lib-3F","()",""],["name","AutoCompleteTest","AutoCompleteTest.html#method-c-name","()",""],["name_of_klass","ApplicationHelper","ApplicationHelper.html#method-i-name_of_klass","(obj)",""],["name_ver","ConsentProtocol","ConsentProtocol.html#method-i-name_ver","()",""],["name_ver","Protocol","Protocol.html#method-i-name_ver","()",""],["negative_failure_message","Spec::Rails::Matchers::ValidateTimeliness","Spec/Rails/Matchers/ValidateTimeliness.html#method-i-negative_failure_message","()",""],["new","Ability","Ability.html#method-c-new","(user=current_user)",""],["new","AlignQcsController","AlignQcsController.html#method-i-new","()","<p>GET /align_qcs/new\n"],["new","AlignmentRefsController","AlignmentRefsController.html#method-i-new","()","<p>GET /alignment_refs/new\n"],["new","AssignedBarcodesController","AssignedBarcodesController.html#method-i-new","()","<p>GET /assigned_barcodes/new\n"],["new","AttachedFilesController","AttachedFilesController.html#method-i-new","()",""],["new","AuthenticatedGenerator","AuthenticatedGenerator.html#method-c-new","(runtime_args, runtime_options = {})",""],["new","BaseLoginProxy","BaseLoginProxy.html#method-c-new","(controller, login)",""],["new","CategoriesController","CategoriesController.html#method-i-new","()","<p>GET /categories/new\n"],["new","ConsentProtocolsController","ConsentProtocolsController.html#method-i-new","()","<p>GET /consent_protocols/new\n"],["new","DissectedSamplesController","DissectedSamplesController.html#method-i-new","()","<p>GET /dissected_samples/new\n"],["new","FlowCellsController","FlowCellsController.html#method-i-new","()",""],["new","FreezerLocationsController","FreezerLocationsController.html#method-i-new","()","<p>GET /freezer_locations/new\n"],["new","HistologiesController","HistologiesController.html#method-i-new","()",""],["new","ItemsController","ItemsController.html#method-i-new","()","<p>GET /items/new\n"],["new","MolecularAssaysController","MolecularAssaysController.html#method-i-new","()","<p>GET /molecular_assays/new\n"],["new","MplexLibsController","MplexLibsController.html#method-i-new","()",""],["new","PathologiesController","PathologiesController.html#method-i-new","()",""],["new","Person","Person.html#method-c-new","(name, id = nil)",""],["new","ProcessedSamplesController","ProcessedSamplesController.html#method-i-new","()","<p>GET /processed_samples/new\n"],["new","ProtocolsController","ProtocolsController.html#method-i-new","()","<p>GET /protocols/new\n"],["new","PublicationsController","PublicationsController.html#method-i-new","()","<p>render new.rhtml\n"],["new","ResearchersController","ResearchersController.html#method-i-new","()","<p>GET /researchers/new GET /researchers/new.xml\n"],["new","RunDirsController","RunDirsController.html#method-i-new","()","<p>Show existing directories for sequencing run, and provide ability to add\nnew directory\n"],["new","SampleCharacteristicsController","SampleCharacteristicsController.html#method-i-new","()","<p>Start of actively used methods ##\n"],["new","SeqLibsController","SeqLibsController.html#method-i-new","()","<p>GET /seq_libs/new\n"],["new","SeqMachinesController","SeqMachinesController.html#method-i-new","()","<p>GET /seq_machines/new\n"],["new","Spec::Rails::Matchers::ValidateTimeliness","Spec/Rails/Matchers/ValidateTimeliness.html#method-c-new","(attribute, options)",""],["new","StorageDevicesController","StorageDevicesController.html#method-i-new","()",""],["new","TestiesController","TestiesController.html#method-i-new","()","<p>GET /testies/new GET /testies/new.xml\n"],["new","UploadsController","UploadsController.html#method-i-new","()","<p>GET /uploads/new\n"],["new","UsersController","UsersController.html#method-i-new","()","<p>render new.rhtml\n"],["new","ValidatesTimeliness::Validator","ValidatesTimeliness/Validator.html#method-c-new","(configuration)",""],["new_generator_for_test_model","Object","Object.html#method-i-new_generator_for_test_model","(gen, args, model = 'testy')",""],["new_he_barcode","Histology","Histology.html#method-c-new_he_barcode","(sample_barcode)",""],["new_item_attributes=","Order","Order.html#method-i-new_item_attributes-3D","(item_attributes)",""],["new_items","OrderMailer","OrderMailer.html#method-i-new_items","(items, user)",""],["new_params","DissectedSamplesController","DissectedSamplesController.html#method-i-new_params","()",""],["new_params","HistologiesController","HistologiesController.html#method-i-new_params","()",""],["new_params","PathologiesController","PathologiesController.html#method-i-new_params","()",""],["new_params","ProcessedSamplesController","ProcessedSamplesController.html#method-i-new_params","()",""],["new_query","FlowcellQueriesController","FlowcellQueriesController.html#method-i-new_query","()",""],["new_query","ItemsController","ItemsController.html#method-i-new_query","()",""],["new_query","MolassayQueriesController","MolassayQueriesController.html#method-i-new_query","()",""],["new_query","OrdersController","OrdersController.html#method-i-new_query","()",""],["new_query","PsampleQueriesController","PsampleQueriesController.html#method-i-new_query","()",""],["new_query","SampleQueriesController","SampleQueriesController.html#method-i-new_query","()",""],["new_query","SampleStorageContainersController","SampleStorageContainersController.html#method-i-new_query","()",""],["new_query","SeqlibQueriesController","SeqlibQueriesController.html#method-i-new_query","()",""],["new_sample","LimsMailer","LimsMailer.html#method-i-new_sample","(sample, mrn, upd_by, emails=nil)",""],["new_sample","SampleCharacteristicsController","SampleCharacteristicsController.html#method-i-new_sample","()",""],["next_assay_barcode","MolecularAssay","MolecularAssay.html#method-c-next_assay_barcode","(source_id, source_barcode, protocol_char)",""],["next_dissection_barcode","Sample","Sample.html#method-c-next_dissection_barcode","(source_sample_id, source_barcode)",""],["next_extraction_barcode","ProcessedSample","ProcessedSample.html#method-c-next_extraction_barcode","(source_id, source_barcode, extraction_char)",""],["non_blank_lane_nrs","FlowCellsController","FlowCellsController.html#method-i-non_blank_lane_nrs","(nb_lanes)",""],["non_blank_lanes","FlowCellsController","FlowCellsController.html#method-i-non_blank_lanes","(lanes)",""],["now=","TimeTravel::TimeExtensions::ClassMethods","TimeTravel/TimeExtensions/ClassMethods.html#method-i-now-3D","(time)",""],["obj","Object","Object.html#method-i-obj","()",""],["offset_in_seconds","ValidatesTimeliness::Formats","ValidatesTimeliness/Formats.html#method-c-offset_in_seconds","(offset)",""],["on_flow_lane?","SeqLib","SeqLib.html#method-i-on_flow_lane-3F","()",""],["ordered?","Item","Item.html#method-i-ordered-3F","()",""],["owner_abbrev","MolecularAssay","MolecularAssay.html#method-i-owner_abbrev","()",""],["owner_abbrev","SeqLib","SeqLib.html#method-i-owner_abbrev","()",""],["param_blank?","ApplicationController","ApplicationController.html#method-i-param_blank-3F","(val)",""],["params","Object","Object.html#method-i-params","()",""],["parse","Object","Object.html#method-i-parse","(*args)",""],["parse","ValidatesTimeliness::Formats","ValidatesTimeliness/Formats.html#method-c-parse","(string, type, options={})","<p>Loop through format expressions for type and call proc on matches. Allow\npre or post match strings to …\n"],["parse","ValidatesTimeliness::Parser","ValidatesTimeliness/Parser.html#method-c-parse","(raw_value, type, options={})",""],["password_required?","Object","Object.html#method-i-password_required-3F","()",""],["password_required?","User","User.html#method-i-password_required-3F","()",""],["pct_with_parens","ApplicationHelper","ApplicationHelper.html#method-i-pct_with_parens","(pct)",""],["person","Object","Object.html#method-i-person","()",""],["pool_string","Pool","Pool.html#method-i-pool_string","()",""],["pool_string_dtl","Pool","Pool.html#method-i-pool_string_dtl","()",""],["populate_assays","MolecularAssaysController","MolecularAssaysController.html#method-i-populate_assays","()","<p>Used to populate rows of molecular assays/samples to be entered\n"],["populate_dropdown","AlignmentRef","AlignmentRef.html#method-c-populate_dropdown","()",""],["populate_dropdown","ConsentProtocol","ConsentProtocol.html#method-c-populate_dropdown","()",""],["populate_dropdown","Pool","Pool.html#method-c-populate_dropdown","(lib_or_flowcell='lib')",""],["populate_dropdown","Researcher","Researcher.html#method-c-populate_dropdown","(active_flag='active_only', add_existing = [])",""],["populate_dropdown","SampleStorageContainer","SampleStorageContainer.html#method-c-populate_dropdown","()",""],["populate_dropdown","SeqMachine","SeqMachine.html#method-c-populate_dropdown","()",""],["populate_dropdown","StorageDevice","StorageDevice.html#method-c-populate_dropdown","()",""],["populate_dropdown_for_category","Category","Category.html#method-c-populate_dropdown_for_category","(name, output='collection')",""],["populate_dropdown_for_id","CategoryValue","CategoryValue.html#method-c-populate_dropdown_for_id","(category_id)",""],["populate_dropdown_grouped","SeqMachine","SeqMachine.html#method-c-populate_dropdown_grouped","()",""],["populate_dropdowns","Category","Category.html#method-c-populate_dropdowns","(cgroups=nil)",""],["populate_items","ItemsController","ItemsController.html#method-i-populate_items","()",""],["populate_lanes","PublicationsController","PublicationsController.html#method-i-populate_lanes","()",""],["populate_libs","SeqLibsController","SeqLibsController.html#method-i-populate_libs","()","<p>Used to populate rows of libraries/samples to be entered for singleplex\nlibraries\n"],["position_sort","SampleStorageContainer","SampleStorageContainer.html#method-i-position_sort","()",""],["prepare_for_render_new","DissectedSamplesController","DissectedSamplesController.html#method-i-prepare_for_render_new","(source_sample_id)",""],["prepare_for_render_new","FlowCellsController","FlowCellsController.html#method-i-prepare_for_render_new","(params)",""],["prepare_for_render_new","HistologiesController","HistologiesController.html#method-i-prepare_for_render_new","(sample_id)",""],["protocol_name","MolecularAssay","MolecularAssay.html#method-i-protocol_name","()",""],["publication_ids","FlowCell","FlowCell.html#method-i-publication_ids","()",""],["publication_ids","FlowLane","FlowLane.html#method-i-publication_ids","()",""],["query_params","PatientsController","PatientsController.html#method-i-query_params","()",""],["query_params","ProtocolsController","ProtocolsController.html#method-i-query_params","()",""],["quote","AnnotateModels","AnnotateModels.html#method-c-quote","(value)","<p>Simple quoting for the default column value\n"],["range_start_chk","AssignedBarcode","AssignedBarcode.html#method-i-range_start_chk","()",""],["read_attribute_before_type_cast_with_timeliness","ValidatesTimeliness::ActiveRecord::AttributeMethods","ValidatesTimeliness/ActiveRecord/AttributeMethods.html#method-i-read_attribute_before_type_cast_with_timeliness","(attr_name)",""],["read_fixture","Object","Object.html#method-i-read_fixture","(action)",""],["received?","Order","Order.html#method-i-received-3F","()",""],["recently_reset?","User","User.html#method-i-recently_reset-3F","()",""],["redirect_back_or_default","AuthenticatedSystem","AuthenticatedSystem.html#method-i-redirect_back_or_default","(default)","<p>Redirect to the URI stored by the most recent store_location call or to the\npassed default.\n"],["reload_defaults","ItemsController","ItemsController.html#method-i-reload_defaults","(item_params)",""],["reload_defaults","MolecularAssaysController","MolecularAssaysController.html#method-i-reload_defaults","(params, nr_assays)",""],["reload_lib_defaults","SeqLibsController","SeqLibsController.html#method-i-reload_lib_defaults","(params, nr_libs)",""],["remember_me","Object","Object.html#method-i-remember_me","()","<p>These create and unset the fields required for remembering users between\nbrowser closes\n"],["remember_me","User","User.html#method-i-remember_me","()","<p>These create and unset the fields required for remembering users between\nbrowser closes\n"],["remember_me_for","User","User.html#method-i-remember_me_for","(time)",""],["remember_me_until","User","User.html#method-i-remember_me_until","(time)",""],["remember_token?","Object","Object.html#method-i-remember_token-3F","()",""],["remember_token?","User","User.html#method-i-remember_token-3F","()",""],["remove_formats","ValidatesTimeliness::Formats","ValidatesTimeliness/Formats.html#method-c-remove_formats","(type, *remove_formats)","<p>Delete formats of specified type. Error raised if format not found.\n"],["remove_link_unless_new_record","CategoriesHelper","CategoriesHelper.html#method-i-remove_link_unless_new_record","(fields)",""],["remove_this_line","ApplicationHelper","ApplicationHelper.html#method-i-remove_this_line","(div)",""],["remove_us_formats","ValidatesTimeliness::Formats","ValidatesTimeliness/Formats.html#method-c-remove_us_formats","()","<p>Removes formats where the 1 or 2 digit month comes first, to eliminate\nformats which are ambiguous with …\n"],["requester_abbrev","Item","Item.html#method-i-requester_abbrev","()",""],["require_role","RoleRequirementSystem::RoleSecurityClassMethods","RoleRequirementSystem/RoleSecurityClassMethods.html#method-i-require_role","(roles, options = {})","<p>Add this to the top of your controller to require a role in order to access\nit. Example Usage:\n\n<pre>require_role ...</pre>\n"],["reset","UsersController","UsersController.html#method-i-reset","()",""],["reset!","AuthenticatedTestHelper","AuthenticatedTestHelper.html#method-i-reset-21","(*instance_vars)",""],["reset_notification","UserNotifier","UserNotifier.html#method-i-reset_notification","(user)",""],["reset_role_requirements!","RoleRequirementSystem::RoleSecurityClassMethods","RoleRequirementSystem/RoleSecurityClassMethods.html#method-i-reset_role_requirements-21","()",""],["role_symbols","User","User.html#method-i-role_symbols","()","<p>This method needed for declarative_authorization gem\n"],["room_and_freezer","FreezerLocation","FreezerLocation.html#method-i-room_and_freezer","()","<p>validates_uniqueness_of :location_string\n"],["room_and_freezer","ProcessedSample","ProcessedSample.html#method-i-room_and_freezer","()",""],["room_and_freezer","Sample","Sample.html#method-i-room_and_freezer","()",""],["room_and_freezer","SampleStorageContainer","SampleStorageContainer.html#method-i-room_and_freezer","()",""],["row_underline","ApplicationHelper","ApplicationHelper.html#method-i-row_underline","(cols)",""],["sample_amt","Sample","Sample.html#method-i-sample_amt","()",""],["sample_category","Sample","Sample.html#method-i-sample_category","()",""],["sample_conc_ngul","SeqLib","SeqLib.html#method-i-sample_conc_ngul","()",""],["sample_conc_nm","SeqLib","SeqLib.html#method-i-sample_conc_nm","()",""],["sample_conc_with_uom","SeqLib","SeqLib.html#method-i-sample_conc_with_uom","()",""],["sample_dropdowns","SampleCharacteristicsController","SampleCharacteristicsController.html#method-i-sample_dropdowns","()",""],["sample_vol","MolecularAssaysHelper","MolecularAssaysHelper.html#method-i-sample_vol","(molecular_assay)",""],["sanitized_object_name","AutoCompleteFormBuilderHelper","AutoCompleteFormBuilderHelper.html#method-i-sanitized_object_name","()",""],["save","NoTable","NoTable.html#method-i-save","(validate = true)","<p>override the save method to prevent exceptions.\n"],["save_items","Order","Order.html#method-i-save_items","()",""],["save_lanes","FlowCell","FlowCell.html#method-i-save_lanes","()",""],["seq_dropdowns","FlowCellsController","FlowCellsController.html#method-i-seq_dropdowns","()",""],["seq_run_key","FlowCell","FlowCell.html#method-i-seq_run_key","()",""],["sequenced?","FlowCell","FlowCell.html#method-i-sequenced-3F","()",""],["set_chemical_flag","OrdersController","OrdersController.html#method-i-set_chemical_flag","(item_id_list)",""],["set_current_user","ApplicationController","ApplicationController.html#method-i-set_current_user","()",""],["set_default_values","SeqLib","SeqLib.html#method-i-set_default_values","()",""],["set_error_message","RunDirsController","RunDirsController.html#method-i-set_error_message","(rc)",""],["set_flash","SslRequirementController","SslRequirementController.html#method-i-set_flash","()",""],["set_flowcell_status","FlowCell","FlowCell.html#method-i-set_flowcell_status","(flowcell_status='F')",""],["setup","AutoCompleteFormBuilderHelperTest","AutoCompleteFormBuilderHelperTest.html#method-i-setup","()",""],["setup","AutoCompleteNestedAttributesTest","AutoCompleteNestedAttributesTest.html#method-i-setup","()",""],["setup","AutoCompleteTest","AutoCompleteTest.html#method-i-setup","()",""],["setup","BlameTest","BlameTest.html#method-i-setup","()",""],["setup","Object","Object.html#method-i-setup","()",""],["setup","OverrideBlameTest","OverrideBlameTest.html#method-i-setup","()",""],["setup","PartialBlameTest","PartialBlameTest.html#method-i-setup","()",""],["setup","SslRequirementTest","SslRequirementTest.html#method-i-setup","()",""],["setup_dropdowns","FlowCellsController","FlowCellsController.html#method-i-setup_dropdowns","()",""],["setup_dropdowns","MplexLibsController","MplexLibsController.html#method-i-setup_dropdowns","()",""],["setup_for_rails","ValidatesTimeliness","ValidatesTimeliness.html#method-c-setup_for_rails","()",""],["setup_params","FlowCellsController","FlowCellsController.html#method-i-setup_params","()",""],["setup_params","MplexLibsController","MplexLibsController.html#method-i-setup_params","()",""],["setup_parent_test_model","Object","Object.html#method-i-setup_parent_test_model","(create_foreign_key = true, child_belongs_to_parent = true)",""],["setup_sql_params","PsampleQueriesController","PsampleQueriesController.html#method-i-setup_sql_params","(params)",""],["setup_sql_params","SampleQueriesController","SampleQueriesController.html#method-i-setup_sql_params","(params)",""],["setup_sql_params","SeqlibQueriesController","SeqlibQueriesController.html#method-i-setup_sql_params","(params)",""],["setup_test_model","Object","Object.html#method-i-setup_test_model","()",""],["setup_test_model_without_nested_attributes","Object","Object.html#method-i-setup_test_model_without_nested_attributes","()",""],["setup_test_table","Object","Object.html#method-i-setup_test_table","()",""],["should_have_error","Object","Object.html#method-i-should_have_error","(attr_name, error)",""],["should_have_no_error","Object","Object.html#method-i-should_have_no_error","(attr_name, error)",""],["show","AlignmentRefsController","AlignmentRefsController.html#method-i-show","()","<p>GET /alignment_refs/1\n"],["show","AssignedBarcodesController","AssignedBarcodesController.html#method-i-show","()","<p>GET /assigned_barcodes/1\n"],["show","AttachedFilesController","AttachedFilesController.html#method-i-show","()","<p>GET /attached_files/1\n"],["show","CategoriesController","CategoriesController.html#method-i-show","()","<p>GET /categories/1\n"],["show","ConsentProtocolsController","ConsentProtocolsController.html#method-i-show","()","<p>GET /consent_protocols/1\n"],["show","FlowCellsController","FlowCellsController.html#method-i-show","()","<p>GET /flow_cells/1\n"],["show","FreezerLocationsController","FreezerLocationsController.html#method-i-show","()","<p>GET /freezer_locations/1\n"],["show","HistologiesController","HistologiesController.html#method-i-show","()",""],["show","ItemsController","ItemsController.html#method-i-show","()","<p>GET /items/1\n"],["show","MolecularAssaysController","MolecularAssaysController.html#method-i-show","()","<p>GET /molecular_assays/1\n"],["show","OligoPoolsController","OligoPoolsController.html#method-i-show","()",""],["show","OrdersController","OrdersController.html#method-i-show","()","<p>GET /orders/1\n"],["show","PathologiesController","PathologiesController.html#method-i-show","()",""],["show","PatientsController","PatientsController.html#method-i-show","()","<p>GET /patients/1\n"],["show","ProcessedSamplesController","ProcessedSamplesController.html#method-i-show","()","<p>GET /processed_samples/1\n"],["show","ProtocolsController","ProtocolsController.html#method-i-show","()","<p>GET /protocols/1\n"],["show","PublicationsController","PublicationsController.html#method-i-show","()","\n<pre>cancan</pre>\n<p>load_and_authorize_resource\n"],["show","ResearchersController","ResearchersController.html#method-i-show","()","<p>GET /researchers/1 GET /researchers/1.xml\n"],["show","RunDirsController","RunDirsController.html#method-i-show","()","<p>GET /run_dirs/1 Not used.  Show action is handled by new method (shows\nexisting directories, and provides …\n"],["show","SampleCharacteristicsController","SampleCharacteristicsController.html#method-i-show","()","<p>GET /patients/1\n"],["show","SamplesController","SamplesController.html#method-i-show","()","<p>Methods to show, edit, update samples                                      \n#\n"],["show","SeqLibsController","SeqLibsController.html#method-i-show","()","<p>GET /seq_libs/1\n"],["show","SeqMachinesController","SeqMachinesController.html#method-i-show","()",""],["show","SeqlibLanesController","SeqlibLanesController.html#method-i-show","()",""],["show","StorageDevicesController","StorageDevicesController.html#method-i-show","()",""],["show","TestiesController","TestiesController.html#method-i-show","()","<p>GET /testies/1 GET /testies/1.xml\n"],["show","UploadsController","UploadsController.html#method-i-show","()","<p>GET /uploads/1\n"],["show_by_sample","ProcessedSamplesController","ProcessedSamplesController.html#method-i-show_by_sample","()",""],["show_files","UploadsController","UploadsController.html#method-i-show_files","()",""],["show_publications","FlowCellsController","FlowCellsController.html#method-i-show_publications","()",""],["show_qc","FlowCellsController","FlowCellsController.html#method-i-show_qc","()",""],["signup","WelcomeController","WelcomeController.html#method-i-signup","()",""],["signup_notification","UserNotifier","UserNotifier.html#method-i-signup_notification","(user)",""],["singleplex_lib","LibSample","LibSample.html#method-i-singleplex_lib","()",""],["singleplex_lib=","LibSample","LibSample.html#method-i-singleplex_lib-3D","(lib_barcode)",""],["some_other_models_attributes=","Object","Object.html#method-i-some_other_models_attributes-3D","()",""],["source_rec","AttachedFilesController","AttachedFilesController.html#method-i-source_rec","(rec_type, rec_key, obj_id=nil)",""],["source_root","ViewMapper::HasManyAutoCompleteView","ViewMapper/HasManyAutoCompleteView.html#method-c-source_root","()",""],["source_roots_for_view","ViewMapper::HasManyAutoCompleteView","ViewMapper/HasManyAutoCompleteView.html#method-i-source_roots_for_view","()",""],["source_sample_name","LibSample","LibSample.html#method-i-source_sample_name","()",""],["source_sample_name","MolecularAssay","MolecularAssay.html#method-i-source_sample_name","()",""],["source_sample_name=","LibSample","LibSample.html#method-i-source_sample_name-3D","(barcode)",""],["source_sample_name=","MolecularAssay","MolecularAssay.html#method-i-source_sample_name-3D","(barcode)",""],["splex_adapters","IndexTag","IndexTag.html#method-c-splex_adapters","()",""],["sql_condition","ApplicationController","ApplicationController.html#method-i-sql_condition","(input_val)",""],["sql_conditions_for_date_range","ApplicationController","ApplicationController.html#method-i-sql_conditions_for_date_range","(where_select, where_values, params, db_fld)",""],["sql_conditions_for_range","ApplicationController","ApplicationController.html#method-i-sql_conditions_for_range","(where_select, where_values, from_val, to_val, db_fld)",""],["sql_value","ApplicationController","ApplicationController.html#method-i-sql_value","(input_val)",""],["sql_where","ActiveRecordExtension::ClassMethods","ActiveRecordExtension/ClassMethods.html#method-i-sql_where","(condition_array)","<p>sql_where:                                                                 \n# From array …\n"],["sql_where","ApplicationController","ApplicationController.html#method-i-sql_where","(condition_array)",""],["ssl_allowed","SslRequirement::ClassMethods","SslRequirement/ClassMethods.html#method-i-ssl_allowed","(*actions)",""],["ssl_allowed?","SslRequirement","SslRequirement.html#method-i-ssl_allowed-3F","()",""],["ssl_required","SslRequirement::ClassMethods","SslRequirement/ClassMethods.html#method-i-ssl_required","(*actions)","<p>Specifies that the named actions requires an SSL connection to be performed\n(which is enforced by ensure_proper_protocol …\n"],["ssl_required?","SslRequirement","SslRequirement.html#method-i-ssl_required-3F","()","<p>Returns true if the current action is supposed to run as SSL\n"],["store_dir","AttachmentUploader","AttachmentUploader.html#method-i-store_dir","()","<p>Override the directory where uploaded files will be stored. This is a\nsensible default for uploaders …\n"],["store_location","AuthenticatedSystem","AuthenticatedSystem.html#method-i-store_location","()","<p>Store the URI of the current request in the session.\n<p>We can return to this location by calling #redirect_back_or_default …\n"],["stub_actions","Object","Object.html#method-i-stub_actions","()",""],["stub_warnings","Object","Object.html#method-i-stub_warnings","()",""],["table_name","FlowcellQuery","FlowcellQuery.html#method-c-table_name","()",""],["table_name","MolassayQuery","MolassayQuery.html#method-c-table_name","()",""],["table_name","PsampleQuery","PsampleQuery.html#method-c-table_name","()",""],["table_name","SampleQuery","SampleQuery.html#method-c-table_name","()",""],["table_name","SeqlibQuery","SeqlibQuery.html#method-c-table_name","()",""],["tag_ctr","IndexTag","IndexTag.html#method-i-tag_ctr","()",""],["tag_sequence","LibSample","LibSample.html#method-i-tag_sequence","()",""],["tagged_form_for","BuilderHelper","BuilderHelper.html#method-i-tagged_form_for","(name, *args, &block)",""],["test_ajax_param","AutoCompleteFormBuilderHelperTest","AutoCompleteFormBuilderHelperTest.html#method-i-test_ajax_param","()",""],["test_ajax_param","AutoCompleteNestedAttributesTest","AutoCompleteNestedAttributesTest.html#method-i-test_ajax_param","()",""],["test_ajax_url","AutoCompleteFormBuilderHelperTest","AutoCompleteFormBuilderHelperTest.html#method-i-test_ajax_url","()",""],["test_ajax_url","AutoCompleteNestedAttributesTest","AutoCompleteNestedAttributesTest.html#method-i-test_ajax_url","()",""],["test_allowed_with_ssl","SslRequirementTest","SslRequirementTest.html#method-i-test_allowed_with_ssl","()",""],["test_allowed_without_ssl","SslRequirementTest","SslRequirementTest.html#method-i-test_allowed_without_ssl","()",""],["test_auto_complete_field","AutoCompleteTest","AutoCompleteTest.html#method-i-test_auto_complete_field","()",""],["test_auto_complete_field_in_normal_form_does_not_have_random_id","AutoCompleteFormBuilderHelperTest","AutoCompleteFormBuilderHelperTest.html#method-i-test_auto_complete_field_in_normal_form_does_not_have_random_id","()",""],["test_auto_complete_for_with_block","AutoCompleteTest","AutoCompleteTest.html#method-i-test_auto_complete_for_with_block","()","<p>auto_complete_for :some_model, :some_other_field do |items, params|\n\n<pre class=\"ruby\"><span class=\"ruby-identifier\">items</span>.<span class=\"ruby-identifier\">scoped</span>( { :<span class=\"ruby-identifier\">conditions</span> =<span class=\"ruby-operator\">&gt;</span> [ <span class=\"ruby-string\">&quot;a_third_field ...\n</span></pre>\n"],["test_auto_complete_result","AutoCompleteTest","AutoCompleteTest.html#method-i-test_auto_complete_result","()",""],["test_auto_index_value_for_existing_record","AutoCompleteFormBuilderHelperTest","AutoCompleteFormBuilderHelperTest.html#method-i-test_auto_index_value_for_existing_record","()",""],["test_auto_index_value_for_new_record","AutoCompleteFormBuilderHelperTest","AutoCompleteFormBuilderHelperTest.html#method-i-test_auto_index_value_for_new_record","()",""],["test_child_index_completion_option","AutoCompleteFormBuilderHelperTest","AutoCompleteFormBuilderHelperTest.html#method-i-test_child_index_completion_option","()",""],["test_child_index_completion_option","AutoCompleteNestedAttributesTest","AutoCompleteNestedAttributesTest.html#method-i-test_child_index_completion_option","()",""],["test_child_index_completion_option_overrides_fields_for_option","AutoCompleteFormBuilderHelperTest","AutoCompleteFormBuilderHelperTest.html#method-i-test_child_index_completion_option_overrides_fields_for_option","()",""],["test_child_index_completion_option_overrides_fields_for_option","AutoCompleteNestedAttributesTest","AutoCompleteNestedAttributesTest.html#method-i-test_child_index_completion_option_overrides_fields_for_option","()",""],["test_child_index_fields_for_option","AutoCompleteFormBuilderHelperTest","AutoCompleteFormBuilderHelperTest.html#method-i-test_child_index_fields_for_option","()",""],["test_child_index_fields_for_option","AutoCompleteNestedAttributesTest","AutoCompleteNestedAttributesTest.html#method-i-test_child_index_fields_for_option","()",""],["test_compare_macro_to_fields_for_in_nested_form","AutoCompleteFormBuilderHelperTest","AutoCompleteFormBuilderHelperTest.html#method-i-test_compare_macro_to_fields_for_in_nested_form","()",""],["test_compare_to_macro_in_normal_form","AutoCompleteFormBuilderHelperTest","AutoCompleteFormBuilderHelperTest.html#method-i-test_compare_to_macro_in_normal_form","()",""],["test_compare_to_macro_in_normal_form_with_symbol","AutoCompleteFormBuilderHelperTest","AutoCompleteFormBuilderHelperTest.html#method-i-test_compare_to_macro_in_normal_form_with_symbol","()",""],["test_create","BlameTest","BlameTest.html#method-i-test_create","()",""],["test_create","OverrideBlameTest","OverrideBlameTest.html#method-i-test_create","()",""],["test_create","PartialBlameTest","PartialBlameTest.html#method-i-test_create","()",""],["test_default_auto_complete_for","AutoCompleteTest","AutoCompleteTest.html#method-i-test_default_auto_complete_for","()","<p>auto_complete_for :some_model, :some_field\n"],["test_disallowed_with_ssl","SslRequirementTest","SslRequirementTest.html#method-i-test_disallowed_with_ssl","()",""],["test_disallowed_without_ssl","SslRequirementTest","SslRequirementTest.html#method-i-test_disallowed_without_ssl","()",""],["test_is_used_as_nested_attribute","AutoCompleteNestedAttributesTest","AutoCompleteNestedAttributesTest.html#method-i-test_is_used_as_nested_attribute","()",""],["test_nested_attributes_all_have_different_ids","AutoCompleteNestedAttributesTest","AutoCompleteNestedAttributesTest.html#method-i-test_nested_attributes_all_have_different_ids","()",""],["test_not_redirecting_to_http_does_not_preserve_the_flash","SslRequirementTest","SslRequirementTest.html#method-i-test_not_redirecting_to_http_does_not_preserve_the_flash","()",""],["test_not_redirecting_to_https_does_not_preserve_the_flash","SslRequirementTest","SslRequirementTest.html#method-i-test_not_redirecting_to_https_does_not_preserve_the_flash","()",""],["test_object_value","AutoCompleteFormBuilderHelperTest","AutoCompleteFormBuilderHelperTest.html#method-i-test_object_value","()",""],["test_object_value","AutoCompleteNestedAttributesTest","AutoCompleteNestedAttributesTest.html#method-i-test_object_value","()",""],["test_partial_updates_disabled","BlameTest","BlameTest.html#method-i-test_partial_updates_disabled","()",""],["test_partial_updates_enabled","PartialBlameTest","PartialBlameTest.html#method-i-test_partial_updates_enabled","()",""],["test_redirect_to_http_preserves_flash","SslRequirementTest","SslRequirementTest.html#method-i-test_redirect_to_http_preserves_flash","()",""],["test_redirect_to_https_preserves_flash","SslRequirementTest","SslRequirementTest.html#method-i-test_redirect_to_https_preserves_flash","()",""],["test_required_with_ssl","SslRequirementTest","SslRequirementTest.html#method-i-test_required_with_ssl","()",""],["test_required_without_ssl","SslRequirementTest","SslRequirementTest.html#method-i-test_required_without_ssl","()",""],["test_sanitized_object_name","AutoCompleteNestedAttributesTest","AutoCompleteNestedAttributesTest.html#method-i-test_sanitized_object_name","()",""],["test_should_create_","Object","Object.html#method-i-test_should_create_","(<%= file_name %> assert_difference <%= class_name %>, :count do <%= file_name %> = create_<%= file_name %> assert !<%= file_name %>.new_record?, \"#{<%= file_name %>.errors.full_messages.to_sentence}\")",""],["test_text_field_with_auto_complete","AutoCompleteTest","AutoCompleteTest.html#method-i-test_text_field_with_auto_complete","()",""],["test_two_auto_complete_fields_in_nested_form_have_different_ids","AutoCompleteFormBuilderHelperTest","AutoCompleteFormBuilderHelperTest.html#method-i-test_two_auto_complete_fields_in_nested_form_have_different_ids","()",""],["test_update","BlameTest","BlameTest.html#method-i-test_update","()",""],["test_update","OverrideBlameTest","OverrideBlameTest.html#method-i-test_update","()",""],["test_update","PartialBlameTest","PartialBlameTest.html#method-i-test_update","()",""],["testies_attributes=","Object","Object.html#method-i-testies_attributes-3D","()",""],["testing","ProcessedSamplesController","ProcessedSamplesController.html#method-i-testing","()",""],["testing","SamplesController","SamplesController.html#method-i-testing","()",""],["text_field_with_auto_complete","AutoCompleteFormBuilderHelper","AutoCompleteFormBuilderHelper.html#method-i-text_field_with_auto_complete","(method, tag_options = {}, completion_options = {})",""],["text_field_with_auto_complete","AutoCompleteMacrosHelper","AutoCompleteMacrosHelper.html#method-i-text_field_with_auto_complete","(object, method, tag_options = {}, completion_options = {})","<p>Wrapper for text_field with added AJAX autocompletion functionality.\n<p>In your controller, you’ll need to …\n"],["time_array_to_string","Object","Object.html#method-i-time_array_to_string","(*args)",""],["time_array_to_string","ValidatesTimeliness::ActiveRecord","ValidatesTimeliness/ActiveRecord.html#method-c-time_array_to_string","(values, type)",""],["tnm","Pathology","Pathology.html#method-i-tnm","()",""],["to_param","Person","Person.html#method-i-to_param","()",""],["unambiguous_year","ValidatesTimeliness::Formats","ValidatesTimeliness/Formats.html#method-c-unambiguous_year","(year)",""],["unique_projects","SeqLib","SeqLib.html#method-c-unique_projects","()",""],["up","CreateParents","CreateParents.html#method-c-up","()",""],["upd_dissections","Sample","Sample.html#method-i-upd_dissections","()","<p>After save, look for any dissections from the source sample updated, and\nupdate those as well\n"],["upd_for_sequencing","FlowCellsController","FlowCellsController.html#method-i-upd_for_sequencing","()",""],["upd_from_source_sample","Sample","Sample.html#method-i-upd_from_source_sample","()",""],["upd_items_recvd","Order","Order.html#method-i-upd_items_recvd","()",""],["upd_items_recvd_for_order","Item","Item.html#method-c-upd_items_recvd_for_order","(order_id, order_received)",""],["upd_lib_lanes","FlowLane","FlowLane.html#method-c-upd_lib_lanes","(seq_lib)","<p>upd_lib_lanes When sequencing library attributes are updated, this method\nis called to update sequencing …\n"],["upd_lib_status","SeqLib","SeqLib.html#method-c-upd_lib_status","(flow_cell, lib_status)",""],["upd_mplex_fields","SeqLib","SeqLib.html#method-c-upd_mplex_fields","(mplex_lib)",""],["upd_mplex_sample_fields","LibSample","LibSample.html#method-c-upd_mplex_sample_fields","(seq_lib)",""],["upd_mplex_splex","SeqLib","SeqLib.html#method-c-upd_mplex_splex","(splex_lib)",""],["upd_multi_lanes","FlowLane","FlowLane.html#method-c-upd_multi_lanes","(flow_lanes, attrs)",""],["upd_multi_lib_samples","LibSample","LibSample.html#method-c-upd_multi_lib_samples","(lib_samples, attrs)",""],["upd_orderid","Item","Item.html#method-c-upd_orderid","(order_id, item_ids)",""],["upd_parent_ids","Sample","Sample.html#method-i-upd_parent_ids","()",""],["upd_seq_key","FlowLane","FlowLane.html#method-c-upd_seq_key","(flow_cell)",""],["update","AlignQcsController","AlignQcsController.html#method-i-update","()",""],["update","AlignmentRefsController","AlignmentRefsController.html#method-i-update","()","<p>PUT /alignment_refs/1\n"],["update","AssignedBarcodesController","AssignedBarcodesController.html#method-i-update","()","<p>PUT /assigned_barcodes/1\n"],["update","CategoriesController","CategoriesController.html#method-i-update","()","<p>PUT /categories/1\n"],["update","ConsentProtocolsController","ConsentProtocolsController.html#method-i-update","()","<p>PUT /consent_protocols/1\n"],["update","DissectedSamplesController","DissectedSamplesController.html#method-i-update","()",""],["update","FlowCellsController","FlowCellsController.html#method-i-update","()","<p>PUT /flow_cells/1\n"],["update","FreezerLocationsController","FreezerLocationsController.html#method-i-update","()","<p>PUT /freezer_locations/1\n"],["update","HistologiesController","HistologiesController.html#method-i-update","()",""],["update","ItemsController","ItemsController.html#method-i-update","()","<p>PUT /items/1\n"],["update","MolecularAssaysController","MolecularAssaysController.html#method-i-update","()","<p>PUT /molecular_assays/1\n"],["update","MplexLibsController","MplexLibsController.html#method-i-update","()","<p>PUT /mplex_libs/1\n"],["update","Object","Object.html#method-i-update","()","<p>PUT /&lt;%= table_name %&gt;/1 PUT /&lt;%= table_name %&gt;/1.xml\n"],["update","OrdersController","OrdersController.html#method-i-update","()","<p>PUT /orders/1 PUT /orders/1.xml\n"],["update","PathologiesController","PathologiesController.html#method-i-update","()",""],["update","PatientsController","PatientsController.html#method-i-update","()","<p>PUT /patients/1\n"],["update","ProcessedSamplesController","ProcessedSamplesController.html#method-i-update","()","<p>PUT /processed_samples/1 PUT /processed_samples/1.xml\n"],["update","ProtocolsController","ProtocolsController.html#method-i-update","()","<p>PUT /protocols/1\n"],["update","PublicationsController","PublicationsController.html#method-i-update","()",""],["update","ResearchersController","ResearchersController.html#method-i-update","()","<p>PUT /researchers/1 PUT /researchers/1.xml\n"],["update","RunDirsController","RunDirsController.html#method-i-update","()",""],["update","SampleCharacteristicsController","SampleCharacteristicsController.html#method-i-update","()","<p>PUT /sample_characteristics/1\n"],["update","SamplesController","SamplesController.html#method-i-update","()",""],["update","SeqLibsController","SeqLibsController.html#method-i-update","()","<p>PUT /seq_libs/1\n"],["update","SeqMachinesController","SeqMachinesController.html#method-i-update","()","<p>PUT /seq_machines/1\n"],["update","StorageDevicesController","StorageDevicesController.html#method-i-update","()",""],["update","TestiesController","TestiesController.html#method-i-update","()","<p>PUT /testies/1 PUT /testies/1.xml\n"],["update","UsersController","UsersController.html#method-i-update","()",""],["update_document_attributes","AttachedFile","AttachedFile.html#method-i-update_document_attributes","()",""],["update_fields","ItemsController","ItemsController.html#method-i-update_fields","()",""],["update_fields","MolecularAssaysController","MolecularAssaysController.html#method-i-update_fields","()","<p>def calc_vol\n\n<pre class=\"ruby\"><span class=\"ruby-identifier\">i</span> = <span class=\"ruby-identifier\">params</span>[:<span class=\"ruby-identifier\">i</span>]\n<span class=\"ruby-identifier\">render</span> :<span class=\"ruby-identifier\">update</span> <span class=\"ruby-keyword\">do</span> <span class=\"ruby-operator\">|</span><span class=\"ruby-identifier\">page</span><span class=\"ruby-operator\">|</span>\n  <span class=\"ruby-identifier\">page</span>.<span class=\"ruby-identifier\">replace_html</span> <span class=\"ruby-node\">&quot;sample_vol_#{i}&quot;</span>, <span class=\"ruby-identifier\">params</span>[:<span class=\"ruby-identifier\">assay_vol</span>] <span class=\"ruby-operator\">...</span>\n</pre>\n"],["update_multi_flagged","RunDirsController","RunDirsController.html#method-i-update_multi_flagged","()",""],["url_for","AutoCompleteFormBuilderHelperTest","AutoCompleteFormBuilderHelperTest.html#method-i-url_for","(options)",""],["url_for","AutoCompleteNestedAttributesTest","AutoCompleteNestedAttributesTest.html#method-i-url_for","(options)",""],["url_for","AutoCompleteTest","AutoCompleteTest.html#method-i-url_for","(options)",""],["url_options_authenticate?","RoleRequirementSystem::RoleSecurityInstanceMethods","RoleRequirementSystem/RoleSecurityInstanceMethods.html#method-i-url_options_authenticate-3F","(params = {})","<p>receives a :controller, :action, and :params.  Finds the given controller\nand runs user_authorized_for …\n"],["user_authorized_for?","RoleRequirementSystem::RoleSecurityClassMethods","RoleRequirementSystem/RoleSecurityClassMethods.html#method-i-user_authorized_for-3F","(user, params = {}, binding = self.binding)","<p>This is the core of RoleRequirement.  Here is where it discerns if a user\ncan access a controller or …\n"],["user_has_access?","ApplicationHelper","ApplicationHelper.html#method-i-user_has_access-3F","(user_roles, valid_roles)",""],["user_login","WelcomeController","WelcomeController.html#method-i-user_login","()",""],["user_role_is?","ApplicationHelper","ApplicationHelper.html#method-i-user_role_is-3F","(role)",""],["userstamp_object","OverrideBlameTest::Sprocket","OverrideBlameTest/Sprocket.html#method-i-userstamp_object","()",""],["userstamps","Blame::UserstampMigrationHelper","Blame/UserstampMigrationHelper.html#method-i-userstamps","()",""],["validate","Item","Item.html#method-i-validate","()",""],["validate","LibSample","LibSample.html#method-i-validate","()","<p>validates_numericality_of :index_tag, :only_integer =&gt; true,\n:allow_blank =&gt; true, :message =&gt; …\n"],["validate","Object","Object.html#method-i-validate","(time_string, type)",""],["validate","Patient","Patient.html#method-i-validate","()",""],["validate","SampleQuery","SampleQuery.html#method-i-validate","()",""],["validate","SeqLib","SeqLib.html#method-i-validate","()",""],["validate","SeqlibQuery","SeqlibQuery.html#method-i-validate","()",""],["validate","ViewMapper::HasManyAutoCompleteView","ViewMapper/HasManyAutoCompleteView.html#method-i-validate","()",""],["validate_date","Spec::Rails::Matchers","Spec/Rails/Matchers.html#method-i-validate_date","(attribute, options={})",""],["validate_datetime","Spec::Rails::Matchers","Spec/Rails/Matchers.html#method-i-validate_datetime","(attribute, options={})",""],["validate_lane_nrs","FlowCellsController","FlowCellsController.html#method-i-validate_lane_nrs","(lanes, upd_method, lanes_required, max_lane_nr = nil)",""],["validate_time","Spec::Rails::Matchers","Spec/Rails/Matchers.html#method-i-validate_time","(attribute, options={})",""],["validate_with","Object","Object.html#method-i-validate_with","(attr_name, value)",""],["validates_date","ValidatesTimeliness::ValidationMethods::ClassMethods","ValidatesTimeliness/ValidationMethods/ClassMethods.html#method-i-validates_date","(*attr_names)",""],["validates_datetime","ValidatesTimeliness::ValidationMethods::ClassMethods","ValidatesTimeliness/ValidationMethods/ClassMethods.html#method-i-validates_datetime","(*attr_names)",""],["validates_time","ValidatesTimeliness::ValidationMethods::ClassMethods","ValidatesTimeliness/ValidationMethods/ClassMethods.html#method-i-validates_time","(*attr_names)",""],["value_with_timeliness","ValidatesTimeliness::ActionView::InstanceTag","ValidatesTimeliness/ActionView/InstanceTag.html#method-i-value_with_timeliness","(object)",""],["vol_from_source","MolecularAssay","MolecularAssay.html#method-i-vol_from_source","()",""],["write_date_time_attribute","ValidatesTimeliness::ActiveRecord::AttributeMethods","ValidatesTimeliness/ActiveRecord/AttributeMethods.html#method-i-write_date_time_attribute","(attr_name, value, type, time_zone_aware)",""],["README_FOR_APP","","doc/README_FOR_APP.html","","<p>Use this README file to introduce your application and point to useful\nplaces in the API for learning …\n"]]}}